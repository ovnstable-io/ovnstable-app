{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x236eeC6359fb44CCe8f97E99387aa7F8cd5cdE1f",
      "txHash": "0x9d94ab7ac97839c259b83933b7976e0a3ef471cd17dd5bff3972d33aa22ab0d7",
      "kind": "uups"
    },
    {
      "address": "0xDd6096d2caed9AEF96d7E7a96d8bceE327894C69",
      "txHash": "0x164410f663176db7bacfc7b0242a4dcf0e5b9b8f19acc4d56cb4c1899d6c5f3f",
      "kind": "uups"
    },
    {
      "address": "0x5885E81C9e509c95366f63FD4608FBA73C545cEA",
      "txHash": "0x214dec669cfa1f1f2bdb30b1db1a73fbb6a8f3a84def4f3272f788507469db63",
      "kind": "uups"
    },
    {
      "address": "0x1502c03D8d6b06bF98F48fB8F0a9752d6626D497",
      "txHash": "0xcaa854bcc43a52d51fc845bd995cf8c32b2f385d653d1aeb3dbe31f28d3c088d",
      "kind": "uups"
    },
    {
      "address": "0x61B9fF9aDD9b143D399134c09235E97dF6bAe4B2",
      "txHash": "0xfbc29e2f8f26ab5223e867ba141aed14d0dd5c8cbf3923d0142c5c7ab2df512d",
      "kind": "uups"
    },
    {
      "address": "0x7B5EDC1C0b0E7212a08deb2392EfBf7845fa019e",
      "txHash": "0x6b72e8ba2467f7970f1d1783efdfb2f6b850bbc4fda6f549618ad1dae0f1c1db",
      "kind": "uups"
    },
    {
      "address": "0xA484E394C9Ae2Af31F0C06089C30A9aDcA8666f0",
      "txHash": "0x5fe01d9b40973b744533cdb02868d48565513e8706ba7cfdef4a2912bbf13b5e",
      "kind": "uups"
    },
    {
      "address": "0xC4C4f19e0c807081e9c18c64484b800Fd7Cd08C7",
      "txHash": "0x5502ef3eb851c4edd89cde251a2e0e38d74f188bab74c7dc5b8c4e7fab798fbd",
      "kind": "uups"
    },
    {
      "address": "0x2b2139C4B82c46D43Cb4C690DeC314140d74EC4A",
      "txHash": "0x131203bed97d416128923b45f3db3c25479097254303d4e4fe42f8b774412b18",
      "kind": "uups"
    },
    {
      "address": "0x951246722A6BA1A2Cc94697acc6a3035cd2F1A88",
      "txHash": "0xdface9c2098d48bff505059cd9261f76f8e6e1023262ccdc5a8ce6d8bbbd987f",
      "kind": "uups"
    },
    {
      "address": "0x8E285353cc976cF1b1138Cb66A95A26157f3340C",
      "txHash": "0xf7380aac688ee9cb7c6b424514f04e53e030b6783679dc588a2e0ea5669c46ce",
      "kind": "uups"
    },
    {
      "address": "0x292F13d4BfD6f6aE0Bf8Be981bcC44eC4850e5E9",
      "txHash": "0x72a4b1efe1baf8fc8f41a42c511b9f5e925904077bc3c0626e06fb98b090fc24",
      "kind": "uups"
    },
    {
      "address": "0x1b53E336D4DE91aC9360Ca7818Cc9a04118691A1",
      "txHash": "0xe5f46525268929526607b46cdeb0c9ab808a789e4b8a8cdf46eb314258ab616b",
      "kind": "uups"
    },
    {
      "address": "0xce285995B87C116226995F8B796A7d4e80D0A82a",
      "txHash": "0x96922caa7f21a55d7042776873f8402d0e5e8bb2d9497203c0adfa47247e6cd2",
      "kind": "uups"
    },
    {
      "address": "0x780890fC9E34c96692D7A338F6aD3F89604d8F7a",
      "txHash": "0xde4fdfa5c5931c8ef2dd520185eb55638c5ccc26bd9554b5ca2a012eb3e42b5a",
      "kind": "uups"
    },
    {
      "address": "0x5C8758966D0877851dcf0ddAA924F50892cb0c3D",
      "txHash": "0x6e7f4e9456c33d96a038fedcdde80877e0bc3b44e1b761069c352fdf2a34f1b3",
      "kind": "uups"
    },
    {
      "address": "0x9d40623e370beBbc3AA6bf4F0b68c452e646b6D0",
      "txHash": "0x54e4ad386561326489120b6096b8c145a26a128c19b405eb51d4b3e69d039c94",
      "kind": "uups"
    },
    {
      "address": "0x937c0c90022c1542a7404135A3b77c8F273cA388",
      "txHash": "0xa92e9b6d74952e1fbf62d6c7f5bb4c68c3a5bcd90e0e3e8a7b68f31d0d49af54",
      "kind": "uups"
    },
    {
      "address": "0x516C8dB22c0CE29A7dE6d4010ED64230d5b7124C",
      "txHash": "0xeed6d875ad3aff85034603362082dabc11b8cdde75e01fd7b0bb3bf252fd785e",
      "kind": "uups"
    },
    {
      "address": "0x0f946DCaC86b4a27d5a37d9A7facb976bB971ba7",
      "txHash": "0xc313a94d3b14d6bc6185959ad77e345af989e2cb963a8f23dd5874f1b78aaa9a",
      "kind": "uups"
    },
    {
      "address": "0xa90D03a46058A011Ffc00d0d7F84cE5370052B92",
      "txHash": "0x762211377bf666f65b62f6e0dc259903e27d050478cfc3719c80c37bd2c49e9e",
      "kind": "uups"
    },
    {
      "address": "0xf06206f232B214EB68cC4cd1e6A4bf5e750a6DAB",
      "txHash": "0x0e5b4d0c0df8fd0803d0f188adb690ae41f37aee923c2209cacc3c2bcc464316",
      "kind": "uups"
    },
    {
      "address": "0xe8DC3eED232D3A9f0f72B3692a4ea75FDa5D3028",
      "txHash": "0xb12a5063c6bd19f1bd21b6f81bb301c8e8c69fa1eef65c5a23c1a8d335f74edf",
      "kind": "uups"
    },
    {
      "address": "0x6825B8CCff9dda82B2bb48DE0e6367AB1aF1fa12",
      "txHash": "0xc75b62335842ad1e9d23bdb06fc95ee0d269937d70da37bf88b8feccfe655ffa",
      "kind": "uups"
    },
    {
      "address": "0x45b574e639D02DCC7831e1C609B855E5a1acf671",
      "txHash": "0x0962b5c8b7e1a549da09b46424c0ec5ae7be13ed51b85500f4775a577f61e570",
      "kind": "uups"
    },
    {
      "address": "0xb3AcF1363809F46cb2d2427D4C13d0516A12c9B8",
      "txHash": "0x2126c758c46abea08530f3cce065e4fad42fda0c3849b94793f39c255084b2f0",
      "kind": "uups"
    },
    {
      "address": "0x4D0F97498C5F0700D5Bb6C6aD661e6E7B74D3811",
      "txHash": "0x9c86218d35616e614a1212d361419fcf1cd6a34de30a280fd35a7bd218d72e0b",
      "kind": "uups"
    },
    {
      "address": "0x1be95eCaB054324248b51eB078e996Ad41657a26",
      "txHash": "0x414440f25f26633978d7c4b1101efc407a89b54935573147dc9ff327f8eace63",
      "kind": "uups"
    },
    {
      "address": "0x59B004612A1977D740A324E3DcCe89718C769c25",
      "txHash": "0xa8d7d498f0349fee382a37c52d18f08146935b90150d252006b4a45fa2386a68",
      "kind": "uups"
    },
    {
      "address": "0x8E285353cc976cF1b1138Cb66A95A26157f3340C",
      "txHash": "0xf7380aac688ee9cb7c6b424514f04e53e030b6783679dc588a2e0ea5669c46ce",
      "kind": "uups"
    },
    {
      "address": "0x3Bd688895F61B47199060623f0A952121A8Bfc1a",
      "txHash": "0x5f9f60f4e26539b367a1b35abf6b1fe3dc1839e5743d0e483464ee1dd60b163e",
      "kind": "uups"
    },
    {
      "address": "0x48712A649f014aCD2a9FC7F9C86f21A2a1000d20",
      "txHash": "0x99dc4240b18055f42795832b9db588bd69985a1f8b57436921fb6c6143be2f4e",
      "kind": "uups"
    },
    {
      "address": "0xee6E70d9ab06A967E2CFb3D17A8A2b5e5DFd2708",
      "txHash": "0x4d85041e14914c5e01637a02afc4efea73afc829bbc50f75966294d09b4c3633",
      "kind": "uups"
    },
    {
      "address": "0xD2CED9216b6410367A2DBe7ea4BdEb15FDf8241A",
      "txHash": "0x1d1e244db10074b74080d1c415b556ce4b7faafa4dfaabd501f5d081f31d4d49",
      "kind": "uups"
    },
    {
      "address": "0x64011B3D1b83b384eaBFe607D3E1B1D27Ec4C22b",
      "txHash": "0xb90d22826dfa4d0a66a56134a917444a5fa6ee654c12418de2093597ba00c4d2",
      "kind": "uups"
    },
    {
      "address": "0xb4C3fC665AA10A49c609e4Cd58cd10D456ED5e6B",
      "txHash": "0xaa8f8254a96a6e1a029fc4d217bc796dad21dd13602bddc1d08913f60bf548e9",
      "kind": "uups"
    },
    {
      "address": "0x73Ed9C2d962025C22c5b0BDe488E9b28ad16feDF",
      "txHash": "0xbf010648abf04b67252be3ebe3afa37dce253d77f21517ccaeee9ace091926e8",
      "kind": "uups"
    },
    {
      "address": "0x96515E03BB35C56473fDc46abd1ac5cA330fE3F3",
      "txHash": "0xcc51e1e54daf0d6e510d32e55f9ed317ac90bd30b076ed5adeb60e7fba4767e9",
      "kind": "uups"
    },
    {
      "address": "0xb16186b8DB038CA2242e0a26019649ACa34F1112",
      "txHash": "0xaca4a678ae53b7670ce5d884a54cb8b60f91f801ea711bc14dac7c90d6423bff",
      "kind": "uups"
    },
    {
      "address": "0xD20d16e3D85ced231d7f11405bBC90De6eBaf590",
      "txHash": "0x91c330c8c00e04bee79e0298ff09f40b2764fdbf2e743eade919d9371771f825",
      "kind": "uups"
    },
    {
      "address": "0xE11A951237F81E5F408B76E01C3914876c60c2d4",
      "txHash": "0xf6001f02c7442e6c88284abf28f254a249031a61e48b3ba3b8cfb1067d79d54a",
      "kind": "uups"
    },
    {
      "address": "0x3953dc0b9c3DDC5824981142ba0f741cE523323d",
      "txHash": "0xa26ab0636a12e010d6bfb014151326d5833a26d1b718c6ba6eb905b5289b1ae6",
      "kind": "uups"
    },
    {
      "address": "0x899fC5C9e13da5De40f36A805Cc454D0162b656d",
      "txHash": "0x8fd36a45b00492763b77dab3f9344693d7bc6d92d567a5563bfef07398a16347",
      "kind": "uups"
    },
    {
      "address": "0x955d9e6AC7F7AC7c55eCe4D08F20E6d016a30E00",
      "txHash": "0x4bdf51c8bdb1392b0fd544b63c2f0fede368512a649a482293f5ff608483003f",
      "kind": "uups"
    },
    {
      "address": "0xfDe73D45Cb60D14E1Deb3b1bb9b67D9B7E9cc873",
      "txHash": "0xaed782072ddafa94fd092af3be73d0e6c99f9c494476561075676aaa0e8535c3",
      "kind": "uups"
    },
    {
      "address": "0x9cFc8Bd1F82DAd684583c04076fD69C2b8C566E1",
      "txHash": "0xd39b766ae752b10cd9e703d289c9bc14f3951600d687e0d60b0c64d97d523a72",
      "kind": "uups"
    },
    {
      "address": "0x8200Ac08079F64B81D3B9b470bF64192962F14FE",
      "txHash": "0x34e62f79056df0e776da9b1a63d4dac9e0bb83f23c124ecaa49eb09788ffcde5",
      "kind": "uups"
    },
    {
      "address": "0x39cB0f37CdC83D2478D10DADeC362Bf3e8468C46",
      "txHash": "0xd3fa1f579029003514edb315b6cb85ca2fb258530c926099210f8ef7ce454574",
      "kind": "uups"
    },
    {
      "address": "0x09C91107182E2234DD24D170b3705fb8379AC55C",
      "txHash": "0xf2b83c1aee0cf5720d2346de32a7c74b41174ad198f5b5d09b95b3c8f277c49f",
      "kind": "uups"
    },
    {
      "address": "0xf5a9cE935FabBa26f6E1a8829CcEe5300Eb3996e",
      "txHash": "0x10af3695e67496fd6b54e802054f13bd60f786312a0d9806ce9dc7cc2292db64",
      "kind": "uups"
    },
    {
      "address": "0xc8Dfeac24cdA3a81F5f034A95503FD640BC1Fd95",
      "txHash": "0x0d95b8276045e9e04f79a24c9ebf1e522788dc0f6c31bb635d5fda1549d638b6",
      "kind": "uups"
    },
    {
      "address": "0x0FE7AA84db235656D09C5B41deAd2784EFda3b39",
      "txHash": "0xffa933501ab1a509b881e26d5f16fb101e2e58fd0224131d54944a3d3b775cca",
      "kind": "uups"
    },
    {
      "address": "0x63b4D2bF2E3fF2355B2B6378063CD65588c7c90A",
      "txHash": "0x2159c09bb0c887fcfb280790ae7f00b79500a643261bb88a401da0afcba91796",
      "kind": "uups"
    },
    {
      "address": "0x318dFFE11660879d31C34b0150721826dB509F0B",
      "txHash": "0xae6044d92b5086f8ef9e307d88d7403776bfe1ef0bf457b82a0e0ee39f962252",
      "kind": "uups"
    },
    {
      "address": "0x910654B62fF161846B382b30D7ebdaf30AaefB25",
      "txHash": "0xaf5513f370751f685fe66dee5339310efdcc15bc1cb5e2844e2cf4d0afe874d0",
      "kind": "uups"
    },
    {
      "address": "0x4aeCD2473ECb676353d40fcBEd929b2a92b9982B",
      "txHash": "0x65fe2bdb8aaf56955f9f55750abff93b3658d4fc5be4a83db0061b6c6002d0d3",
      "kind": "uups"
    },
    {
      "address": "0xb5C81db01cE9ECC65a7ae242c3F9d66293f3a2B8",
      "txHash": "0xae931017179571c1059ef947eec08fbf1f82762be471cad44b3a6e3126e55401",
      "kind": "uups"
    },
    {
      "address": "0xe4B4cF3b2794F140A1e30653B1E3909c9A4dE0E9",
      "txHash": "0xc2a293bc55106aa1f5f4787015b8ce1a8f470a93199e53a7e5267688b3886d05",
      "kind": "uups"
    },
    {
      "address": "0xAd463d772a88C994a5675167ceA30A987325a4B2",
      "txHash": "0xa6383c1d327eb2f56555537264109cf9abf661996c5e6f479ab67f932bf45ac1",
      "kind": "uups"
    },
    {
      "address": "0x0FeEb6C5e5F9b4C506805b308eBC7c6BD2B0A85D",
      "txHash": "0xe4e76852c597cde0f465edc90749656b0f7a45f15bf2bacac197059f8100546a",
      "kind": "uups"
    },
    {
      "address": "0x16E839F18320e5814E7d105D8a21a4011138a3dE",
      "txHash": "0xb679e64baa85fead0d3ee188d4495d3a71ded8690dbf8d6a6be5acf20d14c6d4",
      "kind": "uups"
    },
    {
      "address": "0x7f1bD57edA6995d3a4136C07f85bf7013C5f8243",
      "txHash": "0xd6ef1743a1601c1e4402dae07579f9c2c4ebb136527a88b5c2ce0c73f15f7649",
      "kind": "uups"
    },
    {
      "address": "0x2115AA3a63F280C90E7F1B5d729564A4f09b07dd",
      "txHash": "0x1eca12cd1dccb9e6bfadcc5434163278ba26df51bb560204771af34aba148c93",
      "kind": "uups"
    },
    {
      "address": "0x81AfC1b2b12C6bA97adf68f39bc819e1CC67cE2D",
      "txHash": "0xb8f9740569f99a22cfbd34b194d706f31bc3af00ccb86d1fe3558879d69769af",
      "kind": "uups"
    },
    {
      "address": "0x899724820a9c8356Fd8A60e80445391b6808B487",
      "txHash": "0xe61995a41eaf01b237f5729172e63eae42f761958a9b3a69695c32bd442f209e",
      "kind": "uups"
    },
    {
      "address": "0x77614fAC81D5842823Ec321b117B73a74A43c57d",
      "txHash": "0xd5fa2d59e3bd3b588663a19898de88aed9f8c66bf3634862d4bb16e9559b9de2",
      "kind": "uups"
    },
    {
      "address": "0xfA8Bb3CED390eDB598000A118491d990304df550",
      "txHash": "0x50444380a3b63b349c1b9168311d76bef4bdc9e9a4c875f03ec9214bf284f2f4",
      "kind": "uups"
    },
    {
      "address": "0x29feaaEbEBa8C5778FD77fb7197A3c6386f0ae20",
      "txHash": "0x6f15834b8a8e042797799be753bc146c5fcfeff92ec970a2e2c4134b8b69e2da",
      "kind": "uups"
    },
    {
      "address": "0xcd01d411ccb56107A7dc3051F21B673f0a8361f9",
      "txHash": "0xe7f132ab4d1b6ccc895651c7ffeb61972e787e991f6dbbbb9a5daa16ac36eead",
      "kind": "uups"
    },
    {
      "address": "0xE9D203Ce2CB1Bf0367484BdD5239A7510Efd88Bf",
      "txHash": "0xa965835a1cc587d621b3281eaba025eda8c2cd7640857de79d106705d13badd5",
      "kind": "uups"
    },
    {
      "address": "0x6B3712943A913EB9A22B71D4210DE6158c519970",
      "txHash": "0xacbd727fe788c0cbb9280a213356994023c3e1f6a3d6d023f4223429ac07d434",
      "kind": "uups"
    },
    {
      "address": "0x33efB0868A6f12aEce19B451e0fcf62302Ec4A72",
      "txHash": "0x261edec7e3927a51dfd43d2682707cff8913b856804d9148e6717e24a5b6f0db",
      "kind": "uups"
    },
    {
      "address": "0x5e0d74aCeC01b8cb9623658Fc356304fEB01Aa96",
      "txHash": "0x356bab463fbf61d4d9600e89b30814faf006246af61e412e304ad436db469497",
      "kind": "uups"
    },
    {
      "address": "0xC647A43cF67Ecae5C4C5aC18378FD45C210E8Fbc",
      "txHash": "0x49648c55e8b3a1d7c335f31a26ec38156b03273dc25a5eca80d7069e432420ba",
      "kind": "uups"
    },
    {
      "address": "0xBD8e4aCb3348c09EdCE1476790375b3C04684D32",
      "txHash": "0xf2263e4a3540bb9809bbfcd278be12a168334a67bad48aa9041ec839fe6f3175",
      "kind": "uups"
    },
    {
      "address": "0xB16Af8666675cD039d56cb0645241d3a8C54DacE",
      "txHash": "0xcef9786101b50203291ac203d389b9a9f4b2174d36124055d50d19162ddda734",
      "kind": "uups"
    },
    {
      "address": "0x44FdF9E0C9E52123aB484C9235694cC166CE5718",
      "txHash": "0x6650c334f2f765cf8ecda7f704dad7aa3ae2e8f6b751003af92012a10064dc71",
      "kind": "uups"
    },
    {
      "address": "0xE4E59Fc6a475cDBF12299513461F0F52644ee16D",
      "txHash": "0x9a21fab344b0b7a502de1248690ee9bf94eb2ffcacbda9e3f2c7b7177d5f7a33",
      "kind": "uups"
    },
    {
      "address": "0x19c0F0388521F68cA73Dd02622943202F9e6B461",
      "txHash": "0x885b003a2aa2fceb461110073e0727fabc0c667a7eab1c8196fcd11c510d2121",
      "kind": "uups"
    }
  ],
  "impls": {
    "be5c86cc149ebd0ec39750b6e51219bg22c248d81092e2dbd185bf318a8e5ea0": {
      "address": "0x95D7fF1684a8F2e202097F28Dc2e56F773A55D02",
      "txHash": "0xaac5a4f4c29ce4b77b0f805b70aac8980b3bd64d3d951621c6482d92cbf8d134",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Vault",
            "label": "aaveReward",
            "type": "t_contract(IAaveIncentivesController)20812",
            "src": "contracts/Vault.sol:29"
          },
          {
            "contract": "Vault",
            "label": "vimUsdToken",
            "type": "t_contract(IBoostedVaultWithLockup)22225",
            "src": "contracts/Vault.sol:32"
          }
        ],
        "types": {
          "t_contract(IAaveIncentivesController)20812": {
            "label": "contract IAaveIncentivesController"
          },
          "t_contract(IBoostedVaultWithLockup)22225": {
            "label": "contract IBoostedVaultWithLockup"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "be5c86cc149ebd0ec39750b6e51219bb22c248d81092e2dbdg85bf318a8e5ea0": {
      "address": "0x08c742924315B5512620bB6380D47b39f9410807",
      "txHash": "0xaac5a4f4c29ce4b77b0f805b70aac8980b3bd64d3d951621c6482d92cbf8d134",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Vault",
            "label": "aaveReward",
            "type": "t_contract(IAaveIncentivesController)20812",
            "src": "contracts/Vault.sol:29"
          },
          {
            "contract": "Vault",
            "label": "vimUsdToken",
            "type": "t_contract(IBoostedVaultWithLockup)22225",
            "src": "contracts/Vault.sol:32"
          }
        ],
        "types": {
          "t_contract(IAaveIncentivesController)20812": {
            "label": "contract IAaveIncentivesController"
          },
          "t_contract(IBoostedVaultWithLockup)22225": {
            "label": "contract IBoostedVaultWithLockup"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9f9d3cc2c8559938cd385849eadad4g45e4a4e8e1g4030d5198fa2be0533e198": {
      "address": "0x71d75C9A9e1a4fFa5a16556b51D6e630A4FA902A",
      "txHash": "0xbaeaabdf25184c4370f23af4e0842121b4d0461a41604233f857170f834b3528",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Portfolio",
            "label": "assetInfoPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/registries/Portfolio.sol:13"
          },
          {
            "contract": "Portfolio",
            "label": "assetInfos",
            "type": "t_array(t_struct(AssetInfo)25310_storage)dyn_storage",
            "src": "contracts/registries/Portfolio.sol:14"
          },
          {
            "contract": "Portfolio",
            "label": "assetWeightPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/registries/Portfolio.sol:15"
          },
          {
            "contract": "Portfolio",
            "label": "assetWeights",
            "type": "t_array(t_struct(AssetWeight)25305_storage)dyn_storage",
            "src": "contracts/registries/Portfolio.sol:16"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(AssetInfo)25310_storage)dyn_storage": {
            "label": "struct Portfolio.AssetInfo[]"
          },
          "t_struct(AssetInfo)25310_storage": {
            "label": "struct Portfolio.AssetInfo",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "priceGetter",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(AssetWeight)25305_storage)dyn_storage": {
            "label": "struct Portfolio.AssetWeight[]"
          },
          "t_struct(AssetWeight)25305_storage": {
            "label": "struct Portfolio.AssetWeight",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "minWeight",
                "type": "t_uint256"
              },
              {
                "label": "targetWeight",
                "type": "t_uint256"
              },
              {
                "label": "maxWeight",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9f9d3cc2c8559938cd385849eadad4245e4a4e8e1g4030d5198fa2be0533e198": {
      "address": "0x591AaF32866F314bC8Ff109a77a87Ee9FcD86877",
      "txHash": "0xbaeaabdf25184c4370f23af4e0842121b4d0461a41604233f857170f834b3528",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Portfolio",
            "label": "assetInfoPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/registries/Portfolio.sol:13"
          },
          {
            "contract": "Portfolio",
            "label": "assetInfos",
            "type": "t_array(t_struct(AssetInfo)25310_storage)dyn_storage",
            "src": "contracts/registries/Portfolio.sol:14"
          },
          {
            "contract": "Portfolio",
            "label": "assetWeightPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/registries/Portfolio.sol:15"
          },
          {
            "contract": "Portfolio",
            "label": "assetWeights",
            "type": "t_array(t_struct(AssetWeight)25305_storage)dyn_storage",
            "src": "contracts/registries/Portfolio.sol:16"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(AssetInfo)25310_storage)dyn_storage": {
            "label": "struct Portfolio.AssetInfo[]"
          },
          "t_struct(AssetInfo)25310_storage": {
            "label": "struct Portfolio.AssetInfo",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "priceGetter",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(AssetWeight)25305_storage)dyn_storage": {
            "label": "struct Portfolio.AssetWeight[]"
          },
          "t_struct(AssetWeight)25305_storage": {
            "label": "struct Portfolio.AssetWeight",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "minWeight",
                "type": "t_uint256"
              },
              {
                "label": "targetWeight",
                "type": "t_uint256"
              },
              {
                "label": "maxWeight",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "26f64431bc845164aaf1c13a72115f18455e45g9d23a8998cdc1258356ad7fda": {
      "address": "0x08677Af0A7F54fE2a190bb1F75DE682fe596317e",
      "txHash": "0xc12d5dde1bebda783fc6601e17f5238ce0990413c29cf025ba95ad27c4e50969",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PortfolioManager",
            "label": "exchanger",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:26"
          },
          {
            "contract": "PortfolioManager",
            "label": "vault",
            "type": "t_contract(Vault)17152",
            "src": "contracts/PortfolioManager.sol:27"
          },
          {
            "contract": "PortfolioManager",
            "label": "balancer",
            "type": "t_contract(Balancer)12739",
            "src": "contracts/PortfolioManager.sol:28"
          },
          {
            "contract": "PortfolioManager",
            "label": "rewardManager",
            "type": "t_contract(IRewardManager)23698",
            "src": "contracts/PortfolioManager.sol:29"
          },
          {
            "contract": "PortfolioManager",
            "label": "portfolio",
            "type": "t_contract(Portfolio)25768",
            "src": "contracts/PortfolioManager.sol:30"
          },
          {
            "contract": "PortfolioManager",
            "label": "vimUsdToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:31"
          },
          {
            "contract": "PortfolioManager",
            "label": "imUsdToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:32"
          },
          {
            "contract": "PortfolioManager",
            "label": "usdcToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:33"
          },
          {
            "contract": "PortfolioManager",
            "label": "connectorMStable",
            "type": "t_contract(ConnectorMStable)20689",
            "src": "contracts/PortfolioManager.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(Vault)17152": {
            "label": "contract Vault"
          },
          "t_contract(Balancer)12739": {
            "label": "contract Balancer"
          },
          "t_contract(IRewardManager)23698": {
            "label": "contract IRewardManager"
          },
          "t_contract(Portfolio)25768": {
            "label": "contract Portfolio"
          },
          "t_contract(ConnectorMStable)20689": {
            "label": "contract ConnectorMStable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "26f64431bc845164aaf1c13a7g115f18455e45b9d23a8998cdc1258356ad7fda": {
      "address": "0x880dC1A641AEf94b0D82B12901B13d86F11F5549",
      "txHash": "0xc12d5dde1bebda783fc6601e17f5238ce0990413c29cf025ba95ad27c4e50969",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PortfolioManager",
            "label": "exchanger",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:26"
          },
          {
            "contract": "PortfolioManager",
            "label": "vault",
            "type": "t_contract(Vault)17152",
            "src": "contracts/PortfolioManager.sol:27"
          },
          {
            "contract": "PortfolioManager",
            "label": "balancer",
            "type": "t_contract(Balancer)12739",
            "src": "contracts/PortfolioManager.sol:28"
          },
          {
            "contract": "PortfolioManager",
            "label": "rewardManager",
            "type": "t_contract(IRewardManager)23698",
            "src": "contracts/PortfolioManager.sol:29"
          },
          {
            "contract": "PortfolioManager",
            "label": "portfolio",
            "type": "t_contract(Portfolio)25768",
            "src": "contracts/PortfolioManager.sol:30"
          },
          {
            "contract": "PortfolioManager",
            "label": "vimUsdToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:31"
          },
          {
            "contract": "PortfolioManager",
            "label": "imUsdToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:32"
          },
          {
            "contract": "PortfolioManager",
            "label": "usdcToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:33"
          },
          {
            "contract": "PortfolioManager",
            "label": "connectorMStable",
            "type": "t_contract(ConnectorMStable)20689",
            "src": "contracts/PortfolioManager.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(Vault)17152": {
            "label": "contract Vault"
          },
          "t_contract(Balancer)12739": {
            "label": "contract Balancer"
          },
          "t_contract(IRewardManager)23698": {
            "label": "contract IRewardManager"
          },
          "t_contract(Portfolio)25768": {
            "label": "contract Portfolio"
          },
          "t_contract(ConnectorMStable)20689": {
            "label": "contract ConnectorMStable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "29eda9a2a0da2fd5c1bd30b48311fhdcd748b99a023d954f72c1aa1eba40c233": {
      "address": "0x27f7785b17c6B4d034094a1B16Bc928bD697f386",
      "txHash": "0xbf5b550385f2bcc7db1ce7e5e2628f7c09c4d668f6bc6621974e9433ba0cf596",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Mark2Market",
            "label": "vault",
            "type": "t_contract(Vault)17152",
            "src": "contracts/Mark2Market.sol:22"
          },
          {
            "contract": "Mark2Market",
            "label": "portfolio",
            "type": "t_contract(Portfolio)25768",
            "src": "contracts/Mark2Market.sol:23"
          }
        ],
        "types": {
          "t_contract(Vault)17152": {
            "label": "contract Vault"
          },
          "t_contract(Portfolio)25768": {
            "label": "contract Portfolio"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "29eda9a2a0da2fd5c1bd30b48311f5dcd748b99a023d954f7gc1aa1eba40c233": {
      "address": "0x6640F32F7cf5Cb6f9AcDB1890D4C16FD279b4F10",
      "txHash": "0xbf5b550385f2bcc7db1ce7e5e2628f7c09c4d668f6bc6621974e9433ba0cf596",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Mark2Market",
            "label": "vault",
            "type": "t_contract(Vault)17152",
            "src": "contracts/Mark2Market.sol:22"
          },
          {
            "contract": "Mark2Market",
            "label": "portfolio",
            "type": "t_contract(Portfolio)25768",
            "src": "contracts/Mark2Market.sol:23"
          }
        ],
        "types": {
          "t_contract(Vault)17152": {
            "label": "contract Vault"
          },
          "t_contract(Portfolio)25768": {
            "label": "contract Portfolio"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "bf4db58d0ca35dcfa2271g35g75920fd8c8bc6c21f8d00c0203fee09358f9e97": {
      "address": "0xa9Ea7F91E63896d852c4FCA6124c974adC68Af3B",
      "txHash": "0xc2741a793190de32b7073137beb7d9aed5b51833ba85bb23ef3d9b135d2cec4b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Balancer",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)23632",
            "src": "contracts/Balancer.sol:18"
          },
          {
            "contract": "Balancer",
            "label": "actionBuilders",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Balancer.sol:19"
          }
        ],
        "types": {
          "t_contract(IMark2Market)23632": {
            "label": "contract IMark2Market"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "bf4db58d0ca35dcfa2271535g75920fd8c8bc6c21f8d00c0203fee09358f9e97": {
      "address": "0x152bb8874B4A35dC720f3e518FBE58881AB01D37",
      "txHash": "0xc2741a793190de32b7073137beb7d9aed5b51833ba85bb23ef3d9b135d2cec4b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Balancer",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)23632",
            "src": "contracts/Balancer.sol:18"
          },
          {
            "contract": "Balancer",
            "label": "actionBuilders",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Balancer.sol:19"
          }
        ],
        "types": {
          "t_contract(IMark2Market)23632": {
            "label": "contract IMark2Market"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "1085f7d68a135cebe82a55a1d91f68e7152f34cfb028ea8dbf63ba49446d8bce": {
      "address": "0x701dC26AcaD119E892695bb6A06956e2165C2052",
      "txHash": "0x7bdbd19887acc5152d701e951100124ec290c37c9efaa0fbbff5d66105a74158",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "RewardManager",
            "label": "rewardGauge",
            "type": "t_contract(IRewardOnlyGauge)21720",
            "src": "contracts/RewardManager.sol:21"
          },
          {
            "contract": "RewardManager",
            "label": "vault",
            "type": "t_contract(Vault)17152",
            "src": "contracts/RewardManager.sol:22"
          },
          {
            "contract": "RewardManager",
            "label": "aUsdc",
            "type": "t_contract(IERC20)9027",
            "src": "contracts/RewardManager.sol:23"
          }
        ],
        "types": {
          "t_contract(IRewardOnlyGauge)21720": {
            "label": "contract IRewardOnlyGauge"
          },
          "t_contract(Vault)17152": {
            "label": "contract Vault"
          },
          "t_contract(IERC20)9027": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d1d5464b647ba05dgb84e0b3g9d065c96aa60374a2165ae3c14aa996f8b68627": {
      "address": "0x8290f59DeA644D83B907F4F051288CB6acd81b8b",
      "txHash": "0x8734a2ef7f1e82be9843a2bd87ffd8b0956e5e563a9329a5a9252cb9fe94a825",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Exchange",
            "label": "usdPlus",
            "type": "t_contract(UsdPlusToken)16669",
            "src": "contracts/Exchange.sol:23"
          },
          {
            "contract": "Exchange",
            "label": "usdc",
            "type": "t_contract(IERC20)9027",
            "src": "contracts/Exchange.sol:24"
          },
          {
            "contract": "Exchange",
            "label": "portfolioManager",
            "type": "t_contract(PortfolioManager)15380",
            "src": "contracts/Exchange.sol:26"
          },
          {
            "contract": "Exchange",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)23632",
            "src": "contracts/Exchange.sol:27"
          },
          {
            "contract": "Exchange",
            "label": "buyFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:29"
          },
          {
            "contract": "Exchange",
            "label": "buyFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:30"
          },
          {
            "contract": "Exchange",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:32"
          },
          {
            "contract": "Exchange",
            "label": "redeemFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:33"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimit",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:36"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimitDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:37"
          },
          {
            "contract": "Exchange",
            "label": "nextPayoutTime",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:40"
          },
          {
            "contract": "Exchange",
            "label": "payoutPeriod",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:43"
          },
          {
            "contract": "Exchange",
            "label": "payoutTimeRange",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:50"
          }
        ],
        "types": {
          "t_contract(UsdPlusToken)16669": {
            "label": "contract UsdPlusToken"
          },
          "t_contract(IERC20)9027": {
            "label": "contract IERC20"
          },
          "t_contract(PortfolioManager)15380": {
            "label": "contract PortfolioManager"
          },
          "t_contract(IMark2Market)23632": {
            "label": "contract IMark2Market"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "d1d5464b647ba05dgb84e0b319d065c96aa60374a2165ae3c14aa996f8b68627": {
      "address": "0x44cD53c5Fa8F64A102D629924Ab664E4D17C05e2",
      "txHash": "0x8734a2ef7f1e82be9843a2bd87ffd8b0956e5e563a9329a5a9252cb9fe94a825",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Exchange",
            "label": "usdPlus",
            "type": "t_contract(UsdPlusToken)16669",
            "src": "contracts/Exchange.sol:23"
          },
          {
            "contract": "Exchange",
            "label": "usdc",
            "type": "t_contract(IERC20)9027",
            "src": "contracts/Exchange.sol:24"
          },
          {
            "contract": "Exchange",
            "label": "portfolioManager",
            "type": "t_contract(PortfolioManager)15380",
            "src": "contracts/Exchange.sol:26"
          },
          {
            "contract": "Exchange",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)23632",
            "src": "contracts/Exchange.sol:27"
          },
          {
            "contract": "Exchange",
            "label": "buyFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:29"
          },
          {
            "contract": "Exchange",
            "label": "buyFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:30"
          },
          {
            "contract": "Exchange",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:32"
          },
          {
            "contract": "Exchange",
            "label": "redeemFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:33"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimit",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:36"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimitDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:37"
          },
          {
            "contract": "Exchange",
            "label": "nextPayoutTime",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:40"
          },
          {
            "contract": "Exchange",
            "label": "payoutPeriod",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:43"
          },
          {
            "contract": "Exchange",
            "label": "payoutTimeRange",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:50"
          }
        ],
        "types": {
          "t_contract(UsdPlusToken)16669": {
            "label": "contract UsdPlusToken"
          },
          "t_contract(IERC20)9027": {
            "label": "contract IERC20"
          },
          "t_contract(PortfolioManager)15380": {
            "label": "contract PortfolioManager"
          },
          "t_contract(IMark2Market)23632": {
            "label": "contract IMark2Market"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "493ebb897f777743ed8f92c22e21ade1302294fe04289d5292ae44190578e608": {
      "address": "0x8ef6b9531743255E0A943951b9faDd757966176a",
      "txHash": "0x09cfd5721ab7ce8345ff929fd7cefd1d35b4e9d60cb0d853833d4c629b78af68",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/UsdPlusToken.sol:19"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/UsdPlusToken.sol:21"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:23"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/UsdPlusToken.sol:25"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/UsdPlusToken.sol:26"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalMint",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:33"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalBurn",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:34"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndexChangeTime",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:36"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndex",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:37"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndexDenominator",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:38"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_owners",
            "type": "t_struct(AddressSet)12086_storage",
            "src": "contracts/UsdPlusToken.sol:40"
          },
          {
            "contract": "UsdPlusToken",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/UsdPlusToken.sol:500"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(AddressSet)12086_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)11785_storage"
              }
            ]
          },
          "t_struct(Set)11785_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "47768d4fceb4f36f7f57744611c59ff5bf53200bd9bb3dfde3a150e7a4a5f8bf": {
      "address": "0xD7ACCAf9037bD9898aBB7320CBce7504dAFf028C",
      "txHash": "0x7fa72137fafa89ae1e36fbfe2dbe667304e92a03e4146aa9327123ed08e39dca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "RewardManager",
            "label": "rewardGauge",
            "type": "t_contract(IRewardOnlyGauge)21607",
            "src": "contracts/RewardManager.sol:21"
          },
          {
            "contract": "RewardManager",
            "label": "vault",
            "type": "t_contract(Vault)17039",
            "src": "contracts/RewardManager.sol:22"
          },
          {
            "contract": "RewardManager",
            "label": "aUsdc",
            "type": "t_contract(IERC20)9027",
            "src": "contracts/RewardManager.sol:23"
          }
        ],
        "types": {
          "t_contract(IRewardOnlyGauge)21607": {
            "label": "contract IRewardOnlyGauge"
          },
          "t_contract(Vault)17039": {
            "label": "contract Vault"
          },
          "t_contract(IERC20)9027": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "0ea1fc76e9c07b8b8d44aa4f6945e0fc577283c56d2c160718bc71ebeea2f75a": {
      "address": "0xBBe195efE99fFf1447c6db2B02c2DF37F624c47b",
      "txHash": "0x1011f5dadd08c787a361a23a71ea3b6e3f430d415fc2c8eed154fb6f38baf330",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PortfolioManager",
            "label": "exchanger",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:26"
          },
          {
            "contract": "PortfolioManager",
            "label": "vault",
            "type": "t_contract(Vault)17364",
            "src": "contracts/PortfolioManager.sol:27"
          },
          {
            "contract": "PortfolioManager",
            "label": "balancer",
            "type": "t_contract(Balancer)12803",
            "src": "contracts/PortfolioManager.sol:28"
          },
          {
            "contract": "PortfolioManager",
            "label": "rewardManager",
            "type": "t_contract(IRewardManager)23911",
            "src": "contracts/PortfolioManager.sol:29"
          },
          {
            "contract": "PortfolioManager",
            "label": "portfolio",
            "type": "t_contract(Portfolio)25981",
            "src": "contracts/PortfolioManager.sol:30"
          },
          {
            "contract": "PortfolioManager",
            "label": "vimUsdToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:31"
          },
          {
            "contract": "PortfolioManager",
            "label": "imUsdToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:32"
          },
          {
            "contract": "PortfolioManager",
            "label": "usdcToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:33"
          },
          {
            "contract": "PortfolioManager",
            "label": "connectorMStable",
            "type": "t_contract(ConnectorMStable)20902",
            "src": "contracts/PortfolioManager.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(Vault)17364": {
            "label": "contract Vault"
          },
          "t_contract(Balancer)12803": {
            "label": "contract Balancer"
          },
          "t_contract(IRewardManager)23911": {
            "label": "contract IRewardManager"
          },
          "t_contract(Portfolio)25981": {
            "label": "contract Portfolio"
          },
          "t_contract(ConnectorMStable)20902": {
            "label": "contract ConnectorMStable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9f9d3cc2c8559938cf385849eadad4245e4a4e8e1c4030d5198fa2be0533e198": {
      "address": "0x71d75C9A9e1a4fFa5a16556b51D6e630A4FA902A",
      "txHash": "0xbaeaabdf25184c4370f23af4e0842121b4d0461a41604233f857170f834b3528",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Portfolio",
            "label": "assetInfoPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/registries/Portfolio.sol:13"
          },
          {
            "contract": "Portfolio",
            "label": "assetInfos",
            "type": "t_array(t_struct(AssetInfo)25310_storage)dyn_storage",
            "src": "contracts/registries/Portfolio.sol:14"
          },
          {
            "contract": "Portfolio",
            "label": "assetWeightPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/registries/Portfolio.sol:15"
          },
          {
            "contract": "Portfolio",
            "label": "assetWeights",
            "type": "t_array(t_struct(AssetWeight)25305_storage)dyn_storage",
            "src": "contracts/registries/Portfolio.sol:16"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(AssetInfo)25310_storage)dyn_storage": {
            "label": "struct Portfolio.AssetInfo[]"
          },
          "t_struct(AssetInfo)25310_storage": {
            "label": "struct Portfolio.AssetInfo",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "priceGetter",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(AssetWeight)25305_storage)dyn_storage": {
            "label": "struct Portfolio.AssetWeight[]"
          },
          "t_struct(AssetWeight)25305_storage": {
            "label": "struct Portfolio.AssetWeight",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "minWeight",
                "type": "t_uint256"
              },
              {
                "label": "targetWeight",
                "type": "t_uint256"
              },
              {
                "label": "maxWeight",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "b06dd5a9e4297bbcb96e4ec741cfd76d3b340bf0361d15d98160e485861f8d8e": {
      "address": "0x8f67084ca01ABB29BeEd1158A562333D9b225480",
      "txHash": "0x56d36e8b726d0f972e130a3aa4208f23d30bad0b42b0c0e66c5d3c3a1660f7a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Balancer",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)23845",
            "src": "contracts/Balancer.sol:20"
          },
          {
            "contract": "Balancer",
            "label": "actionBuilders",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Balancer.sol:21"
          }
        ],
        "types": {
          "t_contract(IMark2Market)23845": {
            "label": "contract IMark2Market"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "47768d4fceb4f36f7f57744611c59af5bf53200bd9bb3dfde3a150e7a4a5f8bf": {
      "address": "0xA25185D10CFc38C9c9c4bD2F4646091218168782",
      "txHash": "0x7fa72137fafa89ae1e36fbfe2dbe667304e92a03e4146aa9327123ed08e39dca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "RewardManager",
            "label": "rewardGauge",
            "type": "t_contract(IRewardOnlyGauge)21712",
            "src": "contracts/RewardManager.sol:21"
          },
          {
            "contract": "RewardManager",
            "label": "vault",
            "type": "t_contract(Vault)17144",
            "src": "contracts/RewardManager.sol:22"
          },
          {
            "contract": "RewardManager",
            "label": "aUsdc",
            "type": "t_contract(IERC20)9027",
            "src": "contracts/RewardManager.sol:23"
          }
        ],
        "types": {
          "t_contract(IRewardOnlyGauge)21712": {
            "label": "contract IRewardOnlyGauge"
          },
          "t_contract(Vault)17144": {
            "label": "contract Vault"
          },
          "t_contract(IERC20)9027": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d51df429a1d2e2ac52cccba220e297aeb27e72cf336b2763fe05abe0cc8db640": {
      "address": "0x02892f29c2f2F650eEFaD46235f15617Cd7A1db3",
      "txHash": "0x413018c897c86af9e3a8434d44d2a4540e248929238ac18f86883673993d3b7c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Vault",
            "label": "aaveReward",
            "type": "t_contract(IAaveIncentivesController)20818",
            "src": "contracts/Vault.sol:29"
          },
          {
            "contract": "Vault",
            "label": "vimUsdToken",
            "type": "t_contract(IBoostedVaultWithLockup)22231",
            "src": "contracts/Vault.sol:32"
          }
        ],
        "types": {
          "t_contract(IAaveIncentivesController)20818": {
            "label": "contract IAaveIncentivesController"
          },
          "t_contract(IBoostedVaultWithLockup)22231": {
            "label": "contract IBoostedVaultWithLockup"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "70bcc9cd5b69bd2ddfa0bf218dec71b206e2311178dc6bc8b3ec4702dbcd0dc7": {
      "address": "0x51728032F6bbd5cFf69Ccde511Fc28c19AA6F31a",
      "txHash": "0x1fb636f12d052dded84557ed46299cdef481d12e1623c7abf0850f271e95faab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Vault",
            "label": "aaveReward",
            "type": "t_contract(IAaveIncentivesController)20804",
            "src": "contracts/Vault.sol:29"
          },
          {
            "contract": "Vault",
            "label": "vimUsdToken",
            "type": "t_contract(IBoostedVaultWithLockup)22217",
            "src": "contracts/Vault.sol:32"
          }
        ],
        "types": {
          "t_contract(IAaveIncentivesController)20804": {
            "label": "contract IAaveIncentivesController"
          },
          "t_contract(IBoostedVaultWithLockup)22217": {
            "label": "contract IBoostedVaultWithLockup"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "feaeb2384b85adaf2d786463d64ad94d361ae66954f96f22da6ecaeecbe5b63a": {
      "address": "0xdF211EA6783eD3Dc4ccc78D6Ce00dD31b84EC86d",
      "txHash": "0xe528ea860fb025384dcfec13d4e65bc56f9f4565c1e0e5cb92978221a9cb3ddf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "RewardManager",
            "label": "rewardGauge",
            "type": "t_contract(IRewardOnlyGauge)21717",
            "src": "contracts/RewardManager.sol:21"
          },
          {
            "contract": "RewardManager",
            "label": "vault",
            "type": "t_contract(Vault)17149",
            "src": "contracts/RewardManager.sol:22"
          },
          {
            "contract": "RewardManager",
            "label": "aUsdc",
            "type": "t_contract(IERC20)9027",
            "src": "contracts/RewardManager.sol:23"
          }
        ],
        "types": {
          "t_contract(IRewardOnlyGauge)21717": {
            "label": "contract IRewardOnlyGauge"
          },
          "t_contract(Vault)17149": {
            "label": "contract Vault"
          },
          "t_contract(IERC20)9027": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "493ebb897f777743ed8f9bc22e21ade1302294fe04289d5292ae44190578e608": {
      "address": "0x47541fFA68eF9cCb71EE8f370afA9534A453d849",
      "txHash": "0x69cbf3d9bc6df786d24820fbd94df6422a0036abfb287c1d1981b7c79daab789",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/UsdPlusToken.sol:18"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/UsdPlusToken.sol:20"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:22"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/UsdPlusToken.sol:24"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/UsdPlusToken.sol:25"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalMint",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:32"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalBurn",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:33"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndexChangeTime",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:35"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndex",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:36"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndexDenominator",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:37"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_owners",
            "type": "t_struct(AddressSet)12086_storage",
            "src": "contracts/UsdPlusToken.sol:39"
          },
          {
            "contract": "UsdPlusToken",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/UsdPlusToken.sol:499"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(AddressSet)12086_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)11785_storage"
              }
            ]
          },
          "t_struct(Set)11785_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d1d5464b647ba05d3b84e0b319d065c96aa60374a2165ae3c14aa996f8b68627": {
      "address": "0x78353bF699dD5393D25a15c99C212397159C33f1",
      "txHash": "0x8e3cab3ff7c4cd3f6ff02e95e32d131eaba2e314d9eb98814cf07cf07645c2b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Exchange",
            "label": "usdPlus",
            "type": "t_contract(UsdPlusToken)16669",
            "src": "contracts/Exchange.sol:23"
          },
          {
            "contract": "Exchange",
            "label": "usdc",
            "type": "t_contract(IERC20)9027",
            "src": "contracts/Exchange.sol:24"
          },
          {
            "contract": "Exchange",
            "label": "portfolioManager",
            "type": "t_contract(PortfolioManager)15380",
            "src": "contracts/Exchange.sol:26"
          },
          {
            "contract": "Exchange",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)23632",
            "src": "contracts/Exchange.sol:27"
          },
          {
            "contract": "Exchange",
            "label": "buyFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:29"
          },
          {
            "contract": "Exchange",
            "label": "buyFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:30"
          },
          {
            "contract": "Exchange",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:32"
          },
          {
            "contract": "Exchange",
            "label": "redeemFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:33"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimit",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:36"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimitDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:37"
          },
          {
            "contract": "Exchange",
            "label": "nextPayoutTime",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:40"
          },
          {
            "contract": "Exchange",
            "label": "payoutPeriod",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:43"
          },
          {
            "contract": "Exchange",
            "label": "payoutTimeRange",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:50"
          }
        ],
        "types": {
          "t_contract(UsdPlusToken)16669": {
            "label": "contract UsdPlusToken"
          },
          "t_contract(IERC20)9027": {
            "label": "contract IERC20"
          },
          "t_contract(PortfolioManager)15380": {
            "label": "contract PortfolioManager"
          },
          "t_contract(IMark2Market)23632": {
            "label": "contract IMark2Market"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "1085f7d68a135cebe82a55a1d91e68e7152f34cfb028ea8dbf63ba49446d8bce": {
      "address": "0x3C6a8A97169B761CD13E7A5BE74c54ce2DE64958",
      "txHash": "0x3c6d546ef5b9a3d7f996ec3aa742a69f099bcb0236306940117b519e9e298c4d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "RewardManager",
            "label": "rewardGauge",
            "type": "t_contract(IRewardOnlyGauge)21720",
            "src": "contracts/RewardManager.sol:21"
          },
          {
            "contract": "RewardManager",
            "label": "vault",
            "type": "t_contract(Vault)17152",
            "src": "contracts/RewardManager.sol:22"
          },
          {
            "contract": "RewardManager",
            "label": "aUsdc",
            "type": "t_contract(IERC20)9027",
            "src": "contracts/RewardManager.sol:23"
          }
        ],
        "types": {
          "t_contract(IRewardOnlyGauge)21720": {
            "label": "contract IRewardOnlyGauge"
          },
          "t_contract(Vault)17152": {
            "label": "contract Vault"
          },
          "t_contract(IERC20)9027": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "bf4db58d0ca35dcfa2271535375920fd8c8bc6c21f8d00c0203fee09358f9e97": {
      "address": "0xD55407910fE7F3aA6968CF9df21bCF8913888122",
      "txHash": "0x4717c096af27edcc1ac062e33a89fe66e7763954ffa7390e8754af0af3ba8d7b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Balancer",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)23632",
            "src": "contracts/Balancer.sol:18"
          },
          {
            "contract": "Balancer",
            "label": "actionBuilders",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Balancer.sol:19"
          }
        ],
        "types": {
          "t_contract(IMark2Market)23632": {
            "label": "contract IMark2Market"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "29eda9a2a0da2fd5c1bd30b48311f5dcd748b99af23d954f72c1aa1eba40c233": {
      "address": "0xB480fa19797F3e32e016041443d2C1C0ccBAc9f1",
      "txHash": "0xd2c7aef7c8ddc3f678e94b937672edc2a08a82f77b49c03bae0b4027b38529a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Mark2Market",
            "label": "vault",
            "type": "t_contract(Vault)17152",
            "src": "contracts/Mark2Market.sol:22"
          },
          {
            "contract": "Mark2Market",
            "label": "portfolio",
            "type": "t_contract(Portfolio)25768",
            "src": "contracts/Mark2Market.sol:23"
          }
        ],
        "types": {
          "t_contract(Vault)17152": {
            "label": "contract Vault"
          },
          "t_contract(Portfolio)25768": {
            "label": "contract Portfolio"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "29eda9a2a0da2fd5c1bd30b48311f5dcd748b99a023d954f72c1aa1eba40c233": {
      "address": "0x802Ef065A1aAcF51a5eeA207C1405Bee80c53BC6",
      "txHash": "0xd2c7aef7c8ddc3f678e94b937672edc2a08a82f77b49c03bae0b4027b38529a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Mark2Market",
            "label": "vault",
            "type": "t_contract(Vault)17152",
            "src": "contracts/Mark2Market.sol:22"
          },
          {
            "contract": "Mark2Market",
            "label": "portfolio",
            "type": "t_contract(Portfolio)25768",
            "src": "contracts/Mark2Market.sol:23"
          }
        ],
        "types": {
          "t_contract(Vault)17152": {
            "label": "contract Vault"
          },
          "t_contract(Portfolio)25768": {
            "label": "contract Portfolio"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "26f64431bc845164aaf1c13a72115f18455e45b9d23a8998cdc1258356ad7fda": {
      "address": "0x244AaeB2e166e3Ebfa9097C335eDfdA1CA21377b",
      "txHash": "0xed5e243057e791c4d63122d1309b39710b13ac8f487243db6e6ce5d7b9aab187",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PortfolioManager",
            "label": "exchanger",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:26"
          },
          {
            "contract": "PortfolioManager",
            "label": "vault",
            "type": "t_contract(Vault)17152",
            "src": "contracts/PortfolioManager.sol:27"
          },
          {
            "contract": "PortfolioManager",
            "label": "balancer",
            "type": "t_contract(Balancer)12739",
            "src": "contracts/PortfolioManager.sol:28"
          },
          {
            "contract": "PortfolioManager",
            "label": "rewardManager",
            "type": "t_contract(IRewardManager)23698",
            "src": "contracts/PortfolioManager.sol:29"
          },
          {
            "contract": "PortfolioManager",
            "label": "portfolio",
            "type": "t_contract(Portfolio)25768",
            "src": "contracts/PortfolioManager.sol:30"
          },
          {
            "contract": "PortfolioManager",
            "label": "vimUsdToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:31"
          },
          {
            "contract": "PortfolioManager",
            "label": "imUsdToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:32"
          },
          {
            "contract": "PortfolioManager",
            "label": "usdcToken",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:33"
          },
          {
            "contract": "PortfolioManager",
            "label": "connectorMStable",
            "type": "t_contract(ConnectorMStable)20689",
            "src": "contracts/PortfolioManager.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(Vault)17152": {
            "label": "contract Vault"
          },
          "t_contract(Balancer)12739": {
            "label": "contract Balancer"
          },
          "t_contract(IRewardManager)23698": {
            "label": "contract IRewardManager"
          },
          "t_contract(Portfolio)25768": {
            "label": "contract Portfolio"
          },
          "t_contract(ConnectorMStable)20689": {
            "label": "contract ConnectorMStable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9f9d3cc2c8559938cd385849eadad4245e4a4e8e1c4030d5198fa2be0533e198": {
      "address": "0x30B49fDc16fDC404C69c96FC97e3C0897bC0375d",
      "txHash": "0xd954e1f43fc79ac1fffe783285de6184495cd7a79bba0cd4ec8e2a75b0903b13",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Portfolio",
            "label": "assetInfoPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/registries/Portfolio.sol:13"
          },
          {
            "contract": "Portfolio",
            "label": "assetInfos",
            "type": "t_array(t_struct(AssetInfo)25310_storage)dyn_storage",
            "src": "contracts/registries/Portfolio.sol:14"
          },
          {
            "contract": "Portfolio",
            "label": "assetWeightPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/registries/Portfolio.sol:15"
          },
          {
            "contract": "Portfolio",
            "label": "assetWeights",
            "type": "t_array(t_struct(AssetWeight)25305_storage)dyn_storage",
            "src": "contracts/registries/Portfolio.sol:16"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(AssetInfo)25310_storage)dyn_storage": {
            "label": "struct Portfolio.AssetInfo[]"
          },
          "t_struct(AssetInfo)25310_storage": {
            "label": "struct Portfolio.AssetInfo",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "priceGetter",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(AssetWeight)25305_storage)dyn_storage": {
            "label": "struct Portfolio.AssetWeight[]"
          },
          "t_struct(AssetWeight)25305_storage": {
            "label": "struct Portfolio.AssetWeight",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "minWeight",
                "type": "t_uint256"
              },
              {
                "label": "targetWeight",
                "type": "t_uint256"
              },
              {
                "label": "maxWeight",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "be5c86cc149ebd0ec39750b6e51219bb22c248d81092e2dbd185bf318a8e5ea0": {
      "address": "0x490e49774942284eBa077beb1D036c02d83965bC",
      "txHash": "0xd36b4cee200c93a58793f7ab7a7b2663ec287a380df905c55d5f7e294dbaa25d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Vault",
            "label": "aaveReward",
            "type": "t_contract(IAaveIncentivesController)20812",
            "src": "contracts/Vault.sol:29"
          },
          {
            "contract": "Vault",
            "label": "vimUsdToken",
            "type": "t_contract(IBoostedVaultWithLockup)22225",
            "src": "contracts/Vault.sol:32"
          }
        ],
        "types": {
          "t_contract(IAaveIncentivesController)20812": {
            "label": "contract IAaveIncentivesController"
          },
          "t_contract(IBoostedVaultWithLockup)22225": {
            "label": "contract IBoostedVaultWithLockup"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "a4c2edd678a7bedf8dd1bce4ac2ae8be976cbac0a16f4ead010ab678b8f4ba80": {
      "address": "0x372067F8C15e40f4E034b364f60D9A74897BBCBe",
      "txHash": "0x43fd18dd36d3ab1acca4e7de1c4a7034f8ee2c6e61b55754c97848a77a17c755",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)2950_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:94"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:40"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1761_storage)dyn_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:41"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_totalSupplyCheckpoints",
            "type": "t_array(t_struct(Checkpoint)1761_storage)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:263"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1761_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)1761_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)1761_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_struct(Counter)2950_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)2950_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "d6190d0d5e8c5c1a5c94bcd4c043bd2de4db25df58630ab5bcbf7f6bef6a346b": {
      "address": "0xc5998a064A844B29E256201A56b61267741Df0B3",
      "txHash": "0x30103cd256d9cd65aa93ecae7c2efdbba75b32a3cb7618bdc07c060d4d9cd2f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Exchange",
            "label": "usdPlus",
            "type": "t_contract(UsdPlusToken)16703",
            "src": "contracts/Exchange.sol:23"
          },
          {
            "contract": "Exchange",
            "label": "usdc",
            "type": "t_contract(IERC20)9027",
            "src": "contracts/Exchange.sol:24"
          },
          {
            "contract": "Exchange",
            "label": "portfolioManager",
            "type": "t_contract(PortfolioManager)15414",
            "src": "contracts/Exchange.sol:26"
          },
          {
            "contract": "Exchange",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)23671",
            "src": "contracts/Exchange.sol:27"
          },
          {
            "contract": "Exchange",
            "label": "buyFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:29"
          },
          {
            "contract": "Exchange",
            "label": "buyFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:30"
          },
          {
            "contract": "Exchange",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:32"
          },
          {
            "contract": "Exchange",
            "label": "redeemFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:33"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimit",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:36"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimitDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:37"
          },
          {
            "contract": "Exchange",
            "label": "nextPayoutTime",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:40"
          },
          {
            "contract": "Exchange",
            "label": "payoutPeriod",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:43"
          },
          {
            "contract": "Exchange",
            "label": "payoutTimeRange",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:50"
          }
        ],
        "types": {
          "t_contract(UsdPlusToken)16703": {
            "label": "contract UsdPlusToken"
          },
          "t_contract(IERC20)9027": {
            "label": "contract IERC20"
          },
          "t_contract(PortfolioManager)15414": {
            "label": "contract PortfolioManager"
          },
          "t_contract(IMark2Market)23671": {
            "label": "contract IMark2Market"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "f42cd9f7ac30c08544c619ccc5b10be165f4092e98002d23fa28b90520b5342b": {
      "address": "0xd9c7788fcd77eabdb3c08f8b4eD500be9E160420",
      "txHash": "0xef27c14239ab8fb885412379a10fc07f0122cfb2f5e5a06e13451d5de3d8f249",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Mark2Market",
            "label": "vault",
            "type": "t_contract(Vault)17187",
            "src": "contracts/Mark2Market.sol:22"
          },
          {
            "contract": "Mark2Market",
            "label": "portfolio",
            "type": "t_contract(Portfolio)25808",
            "src": "contracts/Mark2Market.sol:23"
          }
        ],
        "types": {
          "t_contract(Vault)17187": {
            "label": "contract Vault"
          },
          "t_contract(Portfolio)25808": {
            "label": "contract Portfolio"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "0413906086c4a7c6f698eca0b573b4fe0d6d0bb7e01393f614c9ffc8caa54c4b": {
      "address": "0x2a10721fabc2d47a93EAdBc7E4a6f362ee60A959",
      "txHash": "0x61ba3c7597d5ad648024f44f016dcb402170764cf4ef32e53f05da2fc35e11ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Mark2Market",
            "label": "vault",
            "type": "t_contract(Vault)17186",
            "src": "contracts/Mark2Market.sol:22"
          },
          {
            "contract": "Mark2Market",
            "label": "portfolio",
            "type": "t_contract(Portfolio)25807",
            "src": "contracts/Mark2Market.sol:23"
          }
        ],
        "types": {
          "t_contract(Vault)17186": {
            "label": "contract Vault"
          },
          "t_contract(Portfolio)25807": {
            "label": "contract Portfolio"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "89ba23795fbba6abecd2cd3b934e33c4746cb93a9b89ca10d8401a85415f60f1": {
      "address": "0x0B9554d5fFd3c2754B108D533090dba2656741d1",
      "txHash": "0x6066f171a0e3ab5aa6b6bf94aa32c67a9a4c34204946a4907b71d94dd87a668c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Exchange",
            "label": "usdPlus",
            "type": "t_contract(UsdPlusToken)15519",
            "src": "contracts/Exchange.sol:21"
          },
          {
            "contract": "Exchange",
            "label": "usdc",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/Exchange.sol:22"
          },
          {
            "contract": "Exchange",
            "label": "portfolioManager",
            "type": "t_contract(IPortfolioManager)20244",
            "src": "contracts/Exchange.sol:24"
          },
          {
            "contract": "Exchange",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)20188",
            "src": "contracts/Exchange.sol:25"
          },
          {
            "contract": "Exchange",
            "label": "buyFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:27"
          },
          {
            "contract": "Exchange",
            "label": "buyFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:28"
          },
          {
            "contract": "Exchange",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:30"
          },
          {
            "contract": "Exchange",
            "label": "redeemFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:31"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimit",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:34"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimitDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:35"
          },
          {
            "contract": "Exchange",
            "label": "nextPayoutTime",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:38"
          },
          {
            "contract": "Exchange",
            "label": "payoutPeriod",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:41"
          },
          {
            "contract": "Exchange",
            "label": "payoutTimeRange",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:48"
          }
        ],
        "types": {
          "t_contract(UsdPlusToken)15519": {
            "label": "contract UsdPlusToken"
          },
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IPortfolioManager)20244": {
            "label": "contract IPortfolioManager"
          },
          "t_contract(IMark2Market)20188": {
            "label": "contract IMark2Market"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "fa130c5c3e8f9b5ef60dcb90c2b54b9bff2d1922b94f89c080d77d1e324396a1": {
      "address": "0x0757c0f011CD8c9e9d88fECA8D689891743638A3",
      "txHash": "0x2e3e025a32406e2cf5377889595878d5476e596fbf586bcb43652f21bb25b5aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Mark2Market",
            "label": "portfolioManager",
            "type": "t_contract(IPortfolioManager)20244",
            "src": "contracts/Mark2Market.sol:20"
          }
        ],
        "types": {
          "t_contract(IPortfolioManager)20244": {
            "label": "contract IPortfolioManager"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "00f44248bb26c53a037c76b91815d7c3fcc78bf24346648e13c01bffa6c5dd03": {
      "address": "0x9Ac865d89f2036cCD5a50c341157771873BD3E89",
      "txHash": "0xebbab8fa6014e2e0cde41beb287022dc5fa5a5e9947449b8060d8b1326fe73e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PortfolioManager",
            "label": "exchanger",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:23"
          },
          {
            "contract": "PortfolioManager",
            "label": "usdc",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/PortfolioManager.sol:24"
          },
          {
            "contract": "PortfolioManager",
            "label": "strategyWeightPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PortfolioManager.sol:25"
          },
          {
            "contract": "PortfolioManager",
            "label": "strategyWeights",
            "type": "t_array(t_struct(StrategyWeight)20207_storage)dyn_storage",
            "src": "contracts/PortfolioManager.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(StrategyWeight)20207_storage)dyn_storage": {
            "label": "struct IPortfolioManager.StrategyWeight[]"
          },
          "t_struct(StrategyWeight)20207_storage": {
            "label": "struct IPortfolioManager.StrategyWeight",
            "members": [
              {
                "label": "strategy",
                "type": "t_address"
              },
              {
                "label": "minWeight",
                "type": "t_uint256"
              },
              {
                "label": "targetWeight",
                "type": "t_uint256"
              },
              {
                "label": "maxWeight",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "a4f9af37f39f857a545af05c14e0b99a06e255a560fc0eaa170c2ddb066af201": {
      "address": "0x0EAbb15C4fF085349f2736c857b2F4f081d71546",
      "txHash": "0x6075cf07b2926cd0393451e1bfa07b46b1042ed13d525f0e59046dd2e5d17911",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "StrategyAave",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/StrategyAave.sol:20"
          },
          {
            "contract": "StrategyAave",
            "label": "aave",
            "type": "t_contract(ILendingPoolAddressesProvider)16629",
            "src": "contracts/strategies/StrategyAave.sol:21"
          },
          {
            "contract": "StrategyAave",
            "label": "usdc",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:22"
          },
          {
            "contract": "StrategyAave",
            "label": "aUsdc",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(ILendingPoolAddressesProvider)16629": {
            "label": "contract ILendingPoolAddressesProvider"
          },
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "de0dc49676d98082deed4b81e2bfad29b4dc816fc0db0aee6d664470a036647c": {
      "address": "0x82C9AdF9011641eA24053c8A7c6BCb33E3dbD60A",
      "txHash": "0x89d65d55902e6271c437e23d4122846d114c28c321b8638af083ca7e9ae2ce8c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "StrategyIdle",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/StrategyIdle.sol:18"
          },
          {
            "contract": "StrategyIdle",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIdle.sol:20"
          },
          {
            "contract": "StrategyIdle",
            "label": "idleToken",
            "type": "t_contract(IIdleToken)18417",
            "src": "contracts/strategies/StrategyIdle.sol:21"
          },
          {
            "contract": "StrategyIdle",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIdle.sol:22"
          },
          {
            "contract": "StrategyIdle",
            "label": "quickswapExchange",
            "type": "t_contract(QuickswapExchange)16100",
            "src": "contracts/strategies/StrategyIdle.sol:23"
          },
          {
            "contract": "StrategyIdle",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIdle.sol:24"
          },
          {
            "contract": "StrategyIdle",
            "label": "idleTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIdle.sol:25"
          },
          {
            "contract": "StrategyIdle",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIdle.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IIdleToken)18417": {
            "label": "contract IIdleToken"
          },
          "t_contract(QuickswapExchange)16100": {
            "label": "contract QuickswapExchange"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "2d421732e72a0330f2099195d59a5cc42d2f2ac0dcbc679b5eef903e69a9a37b": {
      "address": "0xEa94C678108E9A4B805257876c7f3f50AcE66908",
      "txHash": "0x684a97110bcf8ed853ea8152b69756b2ff4892752432e0a4bf7c29473e28e65f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Exchange",
            "label": "usdPlus",
            "type": "t_contract(UsdPlusToken)15468",
            "src": "contracts/Exchange.sol:21"
          },
          {
            "contract": "Exchange",
            "label": "usdc",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/Exchange.sol:22"
          },
          {
            "contract": "Exchange",
            "label": "portfolioManager",
            "type": "t_contract(IPortfolioManager)20451",
            "src": "contracts/Exchange.sol:24"
          },
          {
            "contract": "Exchange",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)20391",
            "src": "contracts/Exchange.sol:25"
          },
          {
            "contract": "Exchange",
            "label": "buyFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:27"
          },
          {
            "contract": "Exchange",
            "label": "buyFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:28"
          },
          {
            "contract": "Exchange",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:30"
          },
          {
            "contract": "Exchange",
            "label": "redeemFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:31"
          },
          {
            "contract": "Exchange",
            "label": "nextPayoutTime",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:34"
          },
          {
            "contract": "Exchange",
            "label": "payoutPeriod",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:37"
          },
          {
            "contract": "Exchange",
            "label": "payoutTimeRange",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:44"
          }
        ],
        "types": {
          "t_contract(UsdPlusToken)15468": {
            "label": "contract UsdPlusToken"
          },
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IPortfolioManager)20451": {
            "label": "contract IPortfolioManager"
          },
          "t_contract(IMark2Market)20391": {
            "label": "contract IMark2Market"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "03cd1e839cb2af273c2933f7b2d20076037e1be96f94f019b02f4ec513b1fb25": {
      "address": "0x5D6E5D55d86EF32C9dFfB093ec43BE980E07AA7c",
      "txHash": "0x98d362b8109884aa032843cce521bd6c7fa995b6291b0a0229a37a8f6856d217",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Mark2Market",
            "label": "portfolioManager",
            "type": "t_contract(IPortfolioManager)21870",
            "src": "contracts/Mark2Market.sol:19"
          }
        ],
        "types": {
          "t_contract(IPortfolioManager)21870": {
            "label": "contract IPortfolioManager"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "31b12b056b19c63918bae14e2f1e5da69d53fee9e83befa0723cd73b40ef9e2d": {
      "address": "0xdD161aA23c6511f8148A33E6500562Bf22ceD5bC",
      "txHash": "0xdead5f58a5ed856ffaee5e58581343b24373cce93076d7fc75dccd948c066f1a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PortfolioManager",
            "label": "exchanger",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:21"
          },
          {
            "contract": "PortfolioManager",
            "label": "usdc",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/PortfolioManager.sol:22"
          },
          {
            "contract": "PortfolioManager",
            "label": "strategyWeightPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PortfolioManager.sol:23"
          },
          {
            "contract": "PortfolioManager",
            "label": "strategyWeights",
            "type": "t_array(t_struct(StrategyWeight)21482_storage)dyn_storage",
            "src": "contracts/PortfolioManager.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(StrategyWeight)21482_storage)dyn_storage": {
            "label": "struct IPortfolioManager.StrategyWeight[]"
          },
          "t_struct(StrategyWeight)21482_storage": {
            "label": "struct IPortfolioManager.StrategyWeight",
            "members": [
              {
                "label": "strategy",
                "type": "t_address"
              },
              {
                "label": "minWeight",
                "type": "t_uint256"
              },
              {
                "label": "targetWeight",
                "type": "t_uint256"
              },
              {
                "label": "maxWeight",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "enabledReward",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "18860ef368ca1e5c7155754b90f4ac7aa484a21b48b9e9332d870bbd0927140e": {
      "address": "0x9ACb5636E3ED0301d61B1Ac0399d26Cc9b9769d3",
      "txHash": "0xde6f9b24b94c23d42f5ad358af083880ae710fb16b65f9b8c11a97b37f22cfe6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20056",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyCurve",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:14"
          },
          {
            "contract": "StrategyCurve",
            "label": "a3CrvToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:15"
          },
          {
            "contract": "StrategyCurve",
            "label": "a3CrvGaugeToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:16"
          },
          {
            "contract": "StrategyCurve",
            "label": "crvToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:17"
          },
          {
            "contract": "StrategyCurve",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:18"
          },
          {
            "contract": "StrategyCurve",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:20"
          },
          {
            "contract": "StrategyCurve",
            "label": "a3CrvTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:21"
          },
          {
            "contract": "StrategyCurve",
            "label": "crvTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:22"
          },
          {
            "contract": "StrategyCurve",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:23"
          },
          {
            "contract": "StrategyCurve",
            "label": "curvePool",
            "type": "t_contract(iCurvePool)18638",
            "src": "contracts/strategies/StrategyCurve.sol:25"
          },
          {
            "contract": "StrategyCurve",
            "label": "rewardGauge",
            "type": "t_contract(IRewardOnlyGauge)18515",
            "src": "contracts/strategies/StrategyCurve.sol:26"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(iCurvePool)18638": {
            "label": "contract iCurvePool"
          },
          "t_contract(IRewardOnlyGauge)18515": {
            "label": "contract IRewardOnlyGauge"
          },
          "t_contract(IUniswapV2Router02)20056": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ca4ec3db8e1c22eee448fbc3237116a01b6c346e9eef42fb901ce824753710b9": {
      "address": "0x9cB5eadCb25D25cb87B263F475A88082297bcE8D",
      "txHash": "0xa4c3600e7d837cefd13f52bfa717387f2645bae2396bd08c645320e70a049cd0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "StrategyAave",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:11"
          },
          {
            "contract": "StrategyAave",
            "label": "aUsdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:12"
          },
          {
            "contract": "StrategyAave",
            "label": "aaveProvider",
            "type": "t_contract(ILendingPoolAddressesProvider)17005",
            "src": "contracts/strategies/StrategyAave.sol:14"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(ILendingPoolAddressesProvider)17005": {
            "label": "contract ILendingPoolAddressesProvider"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9ad6b3a68489b5571e18a6244087895647c46e4748171d3b67ecadf6fd15245b": {
      "address": "0x0A84EC7fedc3eA5340951133e67Ef1D487f81A1c",
      "txHash": "0xc8f8f6395433d68152a01a0515d54fa3380aefedf65602e3f592e50b3846a408",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)19846",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyQsMaiUsdt",
            "label": "router",
            "type": "t_contract(IUniswapV2Router01)19746",
            "src": "contracts/strategies/StrategyQsMaiUsdt.sol:15"
          },
          {
            "contract": "StrategyQsMaiUsdt",
            "label": "pair",
            "type": "t_contract(IUniswapV2Pair)19437",
            "src": "contracts/strategies/StrategyQsMaiUsdt.sol:16"
          },
          {
            "contract": "StrategyQsMaiUsdt",
            "label": "mai",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyQsMaiUsdt.sol:17"
          },
          {
            "contract": "StrategyQsMaiUsdt",
            "label": "usdt",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyQsMaiUsdt.sol:18"
          },
          {
            "contract": "StrategyQsMaiUsdt",
            "label": "usdc",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyQsMaiUsdt.sol:19"
          }
        ],
        "types": {
          "t_contract(IUniswapV2Router01)19746": {
            "label": "contract IUniswapV2Router01"
          },
          "t_contract(IUniswapV2Pair)19437": {
            "label": "contract IUniswapV2Pair"
          },
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IUniswapV2Router02)19846": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fe4221d0723cbc75288f7f4eb469b872e0c94e7636a26d9a677e31701fb5ea5c": {
      "address": "0xDCC1d85DEab3E9103bD0a06130A7BA789ED0203f",
      "txHash": "0xda4963948c8b2289a7b782a5feaad335b01704fca2a75d407f4778b985180f7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)19846",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyIdle",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIdle.sol:10"
          },
          {
            "contract": "StrategyIdle",
            "label": "idleToken",
            "type": "t_contract(IIdleToken)18620",
            "src": "contracts/strategies/StrategyIdle.sol:11"
          },
          {
            "contract": "StrategyIdle",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIdle.sol:12"
          },
          {
            "contract": "StrategyIdle",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIdle.sol:14"
          },
          {
            "contract": "StrategyIdle",
            "label": "idleTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIdle.sol:15"
          },
          {
            "contract": "StrategyIdle",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIdle.sol:16"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IIdleToken)18620": {
            "label": "contract IIdleToken"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IUniswapV2Router02)19846": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "96e24219b43a41f905e18cfa31389eac10ac6bbcdb311fb316be02b91c0f4cc3": {
      "address": "0xc4b24D7EE045329bc8774e53651d548217c25818",
      "txHash": "0x65abd998c828851c8021eae20fcd3b9ea276a3053057cbdd0453200022da1fdc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "BalancerExchange",
            "label": "balancerVault",
            "type": "t_contract(IVault)18422",
            "src": "contracts/connectors/BalancerExchange.sol:15"
          },
          {
            "contract": "BalancerExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/BalancerExchange.sol:149"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20056",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyBalancer",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:12"
          },
          {
            "contract": "StrategyBalancer",
            "label": "bpspTUsdToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:13"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:14"
          },
          {
            "contract": "StrategyBalancer",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:15"
          },
          {
            "contract": "StrategyBalancer",
            "label": "tusdToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:16"
          },
          {
            "contract": "StrategyBalancer",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:18"
          },
          {
            "contract": "StrategyBalancer",
            "label": "bpspTUsdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:19"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:20"
          },
          {
            "contract": "StrategyBalancer",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:21"
          },
          {
            "contract": "StrategyBalancer",
            "label": "tusdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:22"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerVault",
            "type": "t_contract(IVault)18422",
            "src": "contracts/strategies/StrategyBalancer.sol:24"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerPoolId1",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyBalancer.sol:26"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerPoolId2",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyBalancer.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IVault)18422": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IUniswapV2Router02)20056": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "83990a00b17c11fd7f9cc5ef426da2dd8a568612edbe40f00b411bef786f9f57": {
      "address": "0x76cCC1aa223A1826B5C5119CEBAd2Fb01ED7bE70",
      "txHash": "0xc34ccf98d4459e52ec3b31702ec58a9abad09f3bc7cd9d227bd6f80855665f5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "BalancerExchange",
            "label": "balancerVault",
            "type": "t_contract(IVault)18422",
            "src": "contracts/connectors/BalancerExchange.sol:15"
          },
          {
            "contract": "BalancerExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/BalancerExchange.sol:149"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20056",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:13"
          },
          {
            "contract": "StrategyMStable",
            "label": "mUsdToken",
            "type": "t_contract(IMasset)19284",
            "src": "contracts/strategies/StrategyMStable.sol:14"
          },
          {
            "contract": "StrategyMStable",
            "label": "imUsdToken",
            "type": "t_contract(ISavingsContractV2)19405",
            "src": "contracts/strategies/StrategyMStable.sol:15"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdToken",
            "type": "t_contract(IBoostedVaultWithLockup)19057",
            "src": "contracts/strategies/StrategyMStable.sol:16"
          },
          {
            "contract": "StrategyMStable",
            "label": "mtaToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:17"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:18"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:20"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:21"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:22"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId1",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:24"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId2",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:25"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IMasset)19284": {
            "label": "contract IMasset"
          },
          "t_contract(ISavingsContractV2)19405": {
            "label": "contract ISavingsContractV2"
          },
          "t_contract(IBoostedVaultWithLockup)19057": {
            "label": "contract IBoostedVaultWithLockup"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IUniswapV2Router02)20056": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IVault)18422": {
            "label": "contract IVault"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ea61475012b3380c0ef370d02f9c2c367c61aeb88be923be5cbc37508a812ae3": {
      "address": "0x6FcE1b9f72BA3d42257E58cce743fB7e5790a520",
      "txHash": "0x054378fe6fc96566f40295aab6308b1b012d09a6000c61a8ef1d17fd50d3ee87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Exchange",
            "label": "usdPlus",
            "type": "t_contract(UsdPlusToken)16002",
            "src": "contracts/Exchange.sol:21"
          },
          {
            "contract": "Exchange",
            "label": "usdc",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/Exchange.sol:22"
          },
          {
            "contract": "Exchange",
            "label": "portfolioManager",
            "type": "t_contract(IPortfolioManager)21870",
            "src": "contracts/Exchange.sol:24"
          },
          {
            "contract": "Exchange",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)21807",
            "src": "contracts/Exchange.sol:25"
          },
          {
            "contract": "Exchange",
            "label": "buyFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:27"
          },
          {
            "contract": "Exchange",
            "label": "buyFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:28"
          },
          {
            "contract": "Exchange",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:30"
          },
          {
            "contract": "Exchange",
            "label": "redeemFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:31"
          },
          {
            "contract": "Exchange",
            "label": "nextPayoutTime",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:34"
          },
          {
            "contract": "Exchange",
            "label": "payoutPeriod",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:37"
          },
          {
            "contract": "Exchange",
            "label": "payoutTimeRange",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:44"
          }
        ],
        "types": {
          "t_contract(UsdPlusToken)16002": {
            "label": "contract UsdPlusToken"
          },
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IPortfolioManager)21870": {
            "label": "contract IPortfolioManager"
          },
          "t_contract(IMark2Market)21807": {
            "label": "contract IMark2Market"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "57330b766ed4f82a1865ead7416313a549a4deae751f0fb906e6a98d43bf88c7": {
      "address": "0x5606BC9C9A702dF065d43E34f8F660014929a83d",
      "txHash": "0xfb146b01b7f99e0d8706e976fff9e3acad6763e061c01599e64c58e55c53818d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/UsdPlusToken.sol:18"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/UsdPlusToken.sol:20"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:22"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/UsdPlusToken.sol:24"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/UsdPlusToken.sol:25"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalMint",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:32"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalBurn",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:33"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndexChangeTime",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:35"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndex",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:36"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndexDenominator",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:37"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_owners",
            "type": "t_struct(AddressSet)12205_storage",
            "src": "contracts/UsdPlusToken.sol:39"
          },
          {
            "contract": "UsdPlusToken",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/UsdPlusToken.sol:41"
          },
          {
            "contract": "UsdPlusToken",
            "label": "exchange",
            "type": "t_address",
            "src": "contracts/UsdPlusToken.sol:43"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(AddressSet)12205_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)11904_storage"
              }
            ]
          },
          "t_struct(Set)11904_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "023066a3a934d891cf184ff11b463cc14ee59cd887a53f1c841fddc93d5ab074": {
      "address": "0x8BEDBB7943A66946Ec78dcb5900d08D7A7390FdA",
      "txHash": "0x8caf57e97ee127ca71eea756a4c9f8a950f7451470bef53308cbae6f77082169",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20056",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:21"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:22"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:23"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:24"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:25"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:32"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20415",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20658",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)18830",
            "src": "contracts/strategies/StrategyIzumi.sol:39"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20515",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20415": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20658": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)18830": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20515": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IUniswapV2Router02)20056": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c81db6fdd3b88434473d3ec5c11776230ea953cd09d2a61366a067b6fa7252f6": {
      "address": "0x6AF1E43b83b1AC6215f3D58e25c0fbB728d93f17",
      "txHash": "0x42c7980719e57c7f7300498fac8f1e325427cfd6ebc0f2d802a91800bf6328db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20056",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyCurve",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:14"
          },
          {
            "contract": "StrategyCurve",
            "label": "a3CrvToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:15"
          },
          {
            "contract": "StrategyCurve",
            "label": "a3CrvGaugeToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:16"
          },
          {
            "contract": "StrategyCurve",
            "label": "crvToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:17"
          },
          {
            "contract": "StrategyCurve",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:18"
          },
          {
            "contract": "StrategyCurve",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:20"
          },
          {
            "contract": "StrategyCurve",
            "label": "a3CrvTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:21"
          },
          {
            "contract": "StrategyCurve",
            "label": "crvTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:22"
          },
          {
            "contract": "StrategyCurve",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:23"
          },
          {
            "contract": "StrategyCurve",
            "label": "curvePool",
            "type": "t_contract(iCurvePool)18638",
            "src": "contracts/strategies/StrategyCurve.sol:25"
          },
          {
            "contract": "StrategyCurve",
            "label": "rewardGauge",
            "type": "t_contract(IRewardOnlyGauge)18515",
            "src": "contracts/strategies/StrategyCurve.sol:26"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(iCurvePool)18638": {
            "label": "contract iCurvePool"
          },
          "t_contract(IRewardOnlyGauge)18515": {
            "label": "contract IRewardOnlyGauge"
          },
          "t_contract(IUniswapV2Router02)20056": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a4a9c7ded466219988d94fa06b4707bd1eb7c44223add28f47fd750d34757442": {
      "address": "0x733680599ca3f0d3866e006B8101EE8fD628562C",
      "txHash": "0xacc69b35f0681bd5700903ed76f5af3f5bc1c67636bc6ecd6c5622c6f2baa119",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20056",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:21"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:22"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:23"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:24"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:25"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:32"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20415",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20658",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)18830",
            "src": "contracts/strategies/StrategyIzumi.sol:39"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20515",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20415": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20658": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)18830": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20515": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IUniswapV2Router02)20056": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "966bf2679cc9fa8b234ecda107efb48a9b88d78583d1c9ee2cbea7cf5f160509": {
      "address": "0x2F5E21aD18eF37807a480Af3F4C62866D06D10F6",
      "txHash": "0x32c11b256901a9a2e9484d7b76598a1d7c51ef4652c8d406f98b8a72c30d04f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20056",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:21"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:22"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:23"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:24"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:25"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:32"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20415",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20658",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)18830",
            "src": "contracts/strategies/StrategyIzumi.sol:39"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20515",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20415": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20658": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)18830": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20515": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IUniswapV2Router02)20056": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a6592f957801d52d90f4b703c5852a7f820a9fb27fc0598e28506b9e771acca4": {
      "address": "0x628166F15850AC0d35fCb3207145b308E38D81B6",
      "txHash": "0x2aa4f6f9bd2d53a048decc31d516ff5c43dc8fe91b4d31b60b090256c5064384",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20056",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:21"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:22"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:23"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:24"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:25"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:32"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20415",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20658",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)18830",
            "src": "contracts/strategies/StrategyIzumi.sol:39"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20515",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20415": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20658": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)18830": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20515": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IUniswapV2Router02)20056": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "af29d122771cc0f968fe828d32277cfcfc2159c66d25d361d4e01b3fe92baf43": {
      "address": "0x153CBE72160960325d941460A66D8896cdBc9Eb4",
      "txHash": "0x161924266a5a68c64cc7474a9881e4a6e5fc6f9fca8e166519b6ad1b70deb3f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20056",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:21"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:22"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:23"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:24"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:25"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:32"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20415",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20658",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)18830",
            "src": "contracts/strategies/StrategyIzumi.sol:39"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20515",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20415": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20658": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)18830": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20515": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IUniswapV2Router02)20056": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c45df462b667cc3c5664b49e0671d3bbf130d5b65515a6d40a305c5d045a6297": {
      "address": "0x03267FeFC3cdFe98EA91Fd708972f3e0428Fc25d",
      "txHash": "0x8c18633b8b740ccbe8b5d95b327ffe14fdb5156520e1c058fd247d03528378ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20056",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:21"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:22"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:23"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:24"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:25"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:32"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20415",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20658",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)18830",
            "src": "contracts/strategies/StrategyIzumi.sol:39"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20515",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20415": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20658": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)18830": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20515": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IUniswapV2Router02)20056": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d87d9bbe0050da15a045b6a4941f56bd9bbac05f78d9e1f01151ea9d4f428f8b": {
      "address": "0x38ABB46995aE1E9b4CafA8cF8A69fA293f5eD2C1",
      "txHash": "0x5eeec83526a273a691216105f95394f243cf623e31825371909a821a4f7bad47",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:120"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20056",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:78"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:21"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:22"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:23"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:24"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:25"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:32"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20415",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20658",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)18830",
            "src": "contracts/strategies/StrategyIzumi.sol:39"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20515",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20415": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20658": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)18830": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20515": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IUniswapV2Router02)20056": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a61ff72473e78dfad2272b79279344c3a714f13c97004ae72892336cebcf21ff": {
      "address": "0x7BD771b76bdab04940bA1f88D783aB4e0f769764",
      "txHash": "0xaafa8458ae9e963d973cce213118e586e4f9018d396954cfc6578ac384c87b8b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:121"
          },
          {
            "contract": "StrategyAave",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:11"
          },
          {
            "contract": "StrategyAave",
            "label": "aUsdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:12"
          },
          {
            "contract": "StrategyAave",
            "label": "aaveProvider",
            "type": "t_contract(ILendingPoolAddressesProvider)17269",
            "src": "contracts/strategies/StrategyAave.sol:14"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(ILendingPoolAddressesProvider)17269": {
            "label": "contract ILendingPoolAddressesProvider"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6467766760f3cecb74336d119026f9e2874fbb3f3769dc18d71fbcff186bf6ff": {
      "address": "0x283694e7141E8dBc036115d710c29b071B26dA5C",
      "txHash": "0x291f0355f67cc342d947a39142dde8e1d7abed05a0dec1a87913aede30e40509",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:121"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20320",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyCurve",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:14"
          },
          {
            "contract": "StrategyCurve",
            "label": "a3CrvToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:15"
          },
          {
            "contract": "StrategyCurve",
            "label": "a3CrvGaugeToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:16"
          },
          {
            "contract": "StrategyCurve",
            "label": "crvToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:17"
          },
          {
            "contract": "StrategyCurve",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyCurve.sol:18"
          },
          {
            "contract": "StrategyCurve",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:20"
          },
          {
            "contract": "StrategyCurve",
            "label": "a3CrvTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:21"
          },
          {
            "contract": "StrategyCurve",
            "label": "crvTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:22"
          },
          {
            "contract": "StrategyCurve",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyCurve.sol:23"
          },
          {
            "contract": "StrategyCurve",
            "label": "curvePool",
            "type": "t_contract(iCurvePool)18902",
            "src": "contracts/strategies/StrategyCurve.sol:25"
          },
          {
            "contract": "StrategyCurve",
            "label": "rewardGauge",
            "type": "t_contract(IRewardOnlyGauge)18779",
            "src": "contracts/strategies/StrategyCurve.sol:26"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(iCurvePool)18902": {
            "label": "contract iCurvePool"
          },
          "t_contract(IRewardOnlyGauge)18779": {
            "label": "contract IRewardOnlyGauge"
          },
          "t_contract(IUniswapV2Router02)20320": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7b7ff89e8d4070e5d487b84ae8050c9d1747d115b4fa6bd72c6bd13493ecc6c9": {
      "address": "0xf4dda95E019bE2fAb6cEeD4156c8ec6E1F2690fc",
      "txHash": "0x7c7e79f683cb06ac73a3af64f53976ff1d894f790d1f2474820b75f09b754899",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:121"
          },
          {
            "contract": "BalancerExchange",
            "label": "balancerVault",
            "type": "t_contract(IVault)18338",
            "src": "contracts/connectors/BalancerExchange.sol:15"
          },
          {
            "contract": "BalancerExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/BalancerExchange.sol:149"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)19972",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyBalancer",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:12"
          },
          {
            "contract": "StrategyBalancer",
            "label": "bpspTUsdToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:13"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:14"
          },
          {
            "contract": "StrategyBalancer",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:15"
          },
          {
            "contract": "StrategyBalancer",
            "label": "tusdToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:16"
          },
          {
            "contract": "StrategyBalancer",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:18"
          },
          {
            "contract": "StrategyBalancer",
            "label": "bpspTUsdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:19"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:20"
          },
          {
            "contract": "StrategyBalancer",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:21"
          },
          {
            "contract": "StrategyBalancer",
            "label": "tusdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:22"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerVault",
            "type": "t_contract(IVault)18338",
            "src": "contracts/strategies/StrategyBalancer.sol:24"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerPoolId1",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyBalancer.sol:26"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerPoolId2",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyBalancer.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IVault)18338": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IUniswapV2Router02)19972": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "527f9fc7ef78d61cb4833fc4860a1f495c802e79d0ee77e61a0eaa0dbe1608b0": {
      "address": "0x55C0ADF93841Aa3fb061D60eb8f726CF657e4bEE",
      "txHash": "0xc2749db83af9f095f5fba6f80a1c4532df21c139406f9e3b6aced8aa460b8b34",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:121"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20320",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:25"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:26"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:28"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:33"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:34"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:36"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20679",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20922",
            "src": "contracts/strategies/StrategyIzumi.sol:41"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)19094",
            "src": "contracts/strategies/StrategyIzumi.sol:42"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20779",
            "src": "contracts/strategies/StrategyIzumi.sol:43"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/strategies/StrategyIzumi.sol:45"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerPoolId",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyIzumi.sol:46"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20679": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20922": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)19094": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20779": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IUniswapV2Router02)20320": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0c086ac37bac287b1b46944abbe213a420d79675110bb5adac56e2daa3e9e4a4": {
      "address": "0x361249e947395EB9c4BE64a2E50aaE1051a2AB47",
      "txHash": "0xbf67e9b8d5041af7846a5dbb2bfa4ebb3728978ba05241456316f5fc343288af",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:121"
          },
          {
            "contract": "BalancerExchange",
            "label": "balancerVault",
            "type": "t_contract(IVault)18338",
            "src": "contracts/connectors/BalancerExchange.sol:15"
          },
          {
            "contract": "BalancerExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/BalancerExchange.sol:149"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)19972",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyBalancer",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:15"
          },
          {
            "contract": "StrategyBalancer",
            "label": "bpspTUsdToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:16"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:17"
          },
          {
            "contract": "StrategyBalancer",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:18"
          },
          {
            "contract": "StrategyBalancer",
            "label": "tusdToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:19"
          },
          {
            "contract": "StrategyBalancer",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:21"
          },
          {
            "contract": "StrategyBalancer",
            "label": "bpspTUsdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:22"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:23"
          },
          {
            "contract": "StrategyBalancer",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:24"
          },
          {
            "contract": "StrategyBalancer",
            "label": "tusdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:25"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerVault",
            "type": "t_contract(IVault)18338",
            "src": "contracts/strategies/StrategyBalancer.sol:27"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerPoolId1",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyBalancer.sol:29"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerPoolId2",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyBalancer.sol:30"
          },
          {
            "contract": "StrategyBalancer",
            "label": "merkleOrchard",
            "type": "t_contract(MerkleOrchard)17897",
            "src": "contracts/strategies/StrategyBalancer.sol:32"
          },
          {
            "contract": "StrategyBalancer",
            "label": "distributorBal",
            "type": "t_address",
            "src": "contracts/strategies/StrategyBalancer.sol:34"
          },
          {
            "contract": "StrategyBalancer",
            "label": "distributorWMatic",
            "type": "t_address",
            "src": "contracts/strategies/StrategyBalancer.sol:35"
          },
          {
            "contract": "StrategyBalancer",
            "label": "distributorTUsd",
            "type": "t_address",
            "src": "contracts/strategies/StrategyBalancer.sol:36"
          },
          {
            "contract": "StrategyBalancer",
            "label": "distributionId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:38"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IVault)18338": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(MerkleOrchard)17897": {
            "label": "contract MerkleOrchard"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IUniswapV2Router02)19972": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ab485a00ab28c80056cdc26583ba3cc392d99877395024db996f1d818573276e": {
      "address": "0xc685FdA7a100AFFc43D0abD88ff4b4aDEDF2E3bA",
      "txHash": "0x936d29cddd28865c729a097544ce16801b3d75da038b347e7b0dfa8e3c7550e2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:121"
          },
          {
            "contract": "BalancerExchange",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/connectors/BalancerExchange.sol:15"
          },
          {
            "contract": "BalancerExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/BalancerExchange.sol:149"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20410",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:13"
          },
          {
            "contract": "StrategyMStable",
            "label": "mUsdToken",
            "type": "t_contract(IMasset)19638",
            "src": "contracts/strategies/StrategyMStable.sol:14"
          },
          {
            "contract": "StrategyMStable",
            "label": "imUsdToken",
            "type": "t_contract(ISavingsContractV2)19759",
            "src": "contracts/strategies/StrategyMStable.sol:15"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdToken",
            "type": "t_contract(IBoostedVaultWithLockup)19411",
            "src": "contracts/strategies/StrategyMStable.sol:16"
          },
          {
            "contract": "StrategyMStable",
            "label": "mtaToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:17"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:18"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:20"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:21"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:22"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId1",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:24"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId2",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:25"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IMasset)19638": {
            "label": "contract IMasset"
          },
          "t_contract(ISavingsContractV2)19759": {
            "label": "contract ISavingsContractV2"
          },
          "t_contract(IBoostedVaultWithLockup)19411": {
            "label": "contract IBoostedVaultWithLockup"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IUniswapV2Router02)20410": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fbb0204948b2dbbb81f67b39deaffc639f4fe31d3e73151536b63e24ee2a8aa6": {
      "address": "0x2778270A21D0a467526bb6a5e4C5c91AdA1D29F3",
      "txHash": "0x6c7321bac57f8f928a49657b173100b10852a532abe434ce32f264584fb0d799",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PortfolioManager",
            "label": "exchanger",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:22"
          },
          {
            "contract": "PortfolioManager",
            "label": "usdc",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/PortfolioManager.sol:23"
          },
          {
            "contract": "PortfolioManager",
            "label": "strategyWeightPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PortfolioManager.sol:24"
          },
          {
            "contract": "PortfolioManager",
            "label": "strategyWeights",
            "type": "t_array(t_struct(StrategyWeight)21830_storage)dyn_storage",
            "src": "contracts/PortfolioManager.sol:25"
          },
          {
            "contract": "PortfolioManager",
            "label": "cashStrategy",
            "type": "t_contract(IStrategy)21919",
            "src": "contracts/PortfolioManager.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(StrategyWeight)21830_storage)dyn_storage": {
            "label": "struct IPortfolioManager.StrategyWeight[]"
          },
          "t_struct(StrategyWeight)21830_storage": {
            "label": "struct IPortfolioManager.StrategyWeight",
            "members": [
              {
                "label": "strategy",
                "type": "t_address"
              },
              {
                "label": "minWeight",
                "type": "t_uint256"
              },
              {
                "label": "targetWeight",
                "type": "t_uint256"
              },
              {
                "label": "maxWeight",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "enabledReward",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IStrategy)21919": {
            "label": "contract IStrategy"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "2068412902c1e107ff040ea36dccebe65e9b5df9083ef7c529fc93e8e4abc01e": {
      "address": "0x5f8bDE406D91B2DE7540f77D589FAdFb3c31f374",
      "txHash": "0xbd5bc8f6ba56f64164673e25cf39dc22889e077910d4a21618f2cf7cde407cde",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:121"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20320",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:25"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:26"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:28"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:33"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:34"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:36"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20679",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20922",
            "src": "contracts/strategies/StrategyIzumi.sol:41"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)19094",
            "src": "contracts/strategies/StrategyIzumi.sol:42"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20779",
            "src": "contracts/strategies/StrategyIzumi.sol:43"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/strategies/StrategyIzumi.sol:45"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerPoolId",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyIzumi.sol:46"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20679": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20922": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)19094": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20779": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IUniswapV2Router02)20320": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "609fe6376cb47ee439d7b2ad186da4918ca8d8df4d17a80cf2ee874b5ebf7513": {
      "address": "0x2FF38b226c5Fe723A03F10DAdbECc3cE5B729121",
      "txHash": "0xa1da00d5f8b539a4f618e985af81287d133a54b7e33b319f9452c6a3bb62d911",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:121"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20320",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:25"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:26"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:28"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:33"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:34"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:36"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20679",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20922",
            "src": "contracts/strategies/StrategyIzumi.sol:41"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)19094",
            "src": "contracts/strategies/StrategyIzumi.sol:42"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20779",
            "src": "contracts/strategies/StrategyIzumi.sol:43"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/strategies/StrategyIzumi.sol:45"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerPoolId",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyIzumi.sol:46"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20679": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20922": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)19094": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20779": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IUniswapV2Router02)20320": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5315b8bb8d546206b1bdd55f8899b57aa3eea863ef659f391a08a5f0af44c05c": {
      "address": "0xcC1e3caF23728016C3977C54BA4Ea0C72e072F8B",
      "txHash": "0xa333986031a52145dd5e72be9169f456dd1f54d4c3d43d89dd1eaa61a0851b36",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:121"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20357",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:28"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:33"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:36"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20716",
            "src": "contracts/strategies/StrategyIzumi.sol:42"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20959",
            "src": "contracts/strategies/StrategyIzumi.sol:43"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)19131",
            "src": "contracts/strategies/StrategyIzumi.sol:44"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20816",
            "src": "contracts/strategies/StrategyIzumi.sol:45"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/strategies/StrategyIzumi.sol:47"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerPoolId",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyIzumi.sol:48"
          },
          {
            "contract": "StrategyIzumi",
            "label": "aavePool",
            "type": "t_contract(iCurvePool)18939",
            "src": "contracts/strategies/StrategyIzumi.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20716": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20959": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)19131": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20816": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(iCurvePool)18939": {
            "label": "contract iCurvePool"
          },
          "t_contract(IUniswapV2Router02)20357": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e6f2b2b7f3401ce9c22537613b04c07e725765e54c4d4b008465b5183f9ac04d": {
      "address": "0x8f15f86E89bDc0BA8e078e3CBaFAD9EaD9b34045",
      "txHash": "0x98134fa912af52f40e9d0142594464ecbe75d86132ece6900df4f709024ae6e3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:121"
          },
          {
            "contract": "BalancerExchange",
            "label": "balancerVault",
            "type": "t_contract(IVault)18362",
            "src": "contracts/connectors/BalancerExchange.sol:15"
          },
          {
            "contract": "BalancerExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/BalancerExchange.sol:149"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)19996",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyBalancer",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:13"
          },
          {
            "contract": "StrategyBalancer",
            "label": "bpspTUsdToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:14"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:15"
          },
          {
            "contract": "StrategyBalancer",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:16"
          },
          {
            "contract": "StrategyBalancer",
            "label": "tusdToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyBalancer.sol:17"
          },
          {
            "contract": "StrategyBalancer",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:19"
          },
          {
            "contract": "StrategyBalancer",
            "label": "bpspTUsdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:20"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:21"
          },
          {
            "contract": "StrategyBalancer",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:22"
          },
          {
            "contract": "StrategyBalancer",
            "label": "tusdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:23"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerVault",
            "type": "t_contract(IVault)18362",
            "src": "contracts/strategies/StrategyBalancer.sol:25"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerPoolId1",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyBalancer.sol:27"
          },
          {
            "contract": "StrategyBalancer",
            "label": "balancerPoolId2",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyBalancer.sol:28"
          },
          {
            "contract": "StrategyBalancer",
            "label": "merkleOrchard",
            "type": "t_contract(MerkleOrchard)17921",
            "src": "contracts/strategies/StrategyBalancer.sol:30"
          },
          {
            "contract": "StrategyBalancer",
            "label": "distributorBal",
            "type": "t_address",
            "src": "contracts/strategies/StrategyBalancer.sol:32"
          },
          {
            "contract": "StrategyBalancer",
            "label": "distributorWMatic",
            "type": "t_address",
            "src": "contracts/strategies/StrategyBalancer.sol:33"
          },
          {
            "contract": "StrategyBalancer",
            "label": "distributorTUsd",
            "type": "t_address",
            "src": "contracts/strategies/StrategyBalancer.sol:34"
          },
          {
            "contract": "StrategyBalancer",
            "label": "distributionId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:37"
          },
          {
            "contract": "StrategyBalancer",
            "label": "distributionIdBal",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:39"
          },
          {
            "contract": "StrategyBalancer",
            "label": "distributionIdWMatic",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:40"
          },
          {
            "contract": "StrategyBalancer",
            "label": "distributionIdTUsd",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:41"
          },
          {
            "contract": "StrategyBalancer",
            "label": "claimedBalanceBal",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:43"
          },
          {
            "contract": "StrategyBalancer",
            "label": "claimedBalanceWMatic",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:44"
          },
          {
            "contract": "StrategyBalancer",
            "label": "claimedBalanceTUsd",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyBalancer.sol:45"
          },
          {
            "contract": "StrategyBalancer",
            "label": "merkleProofBal",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/strategies/StrategyBalancer.sol:47"
          },
          {
            "contract": "StrategyBalancer",
            "label": "merkleProofWMatic",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/strategies/StrategyBalancer.sol:48"
          },
          {
            "contract": "StrategyBalancer",
            "label": "merkleProofTUsd",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/strategies/StrategyBalancer.sol:49"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IVault)18362": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(MerkleOrchard)17921": {
            "label": "contract MerkleOrchard"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_contract(IUniswapV2Router02)19996": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c02dcda1201c6595cf78445cb816a9a413f4bf3d133f5c4b022550f578d307e7": {
      "address": "0x7aDFf74287A5fA17721042e3Ed64e2470C20E1b5",
      "txHash": "0x4313e851caed9f0b03bea40ba4045f86d6ef43dd52de18b1ad1b51a0edb8e44c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:124"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20357",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:28"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:33"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:36"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20716",
            "src": "contracts/strategies/StrategyIzumi.sol:42"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20959",
            "src": "contracts/strategies/StrategyIzumi.sol:43"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)19131",
            "src": "contracts/strategies/StrategyIzumi.sol:44"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20816",
            "src": "contracts/strategies/StrategyIzumi.sol:45"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/strategies/StrategyIzumi.sol:47"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerPoolId",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyIzumi.sol:48"
          },
          {
            "contract": "StrategyIzumi",
            "label": "aavePool",
            "type": "t_contract(iCurvePool)18939",
            "src": "contracts/strategies/StrategyIzumi.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20716": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20959": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)19131": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20816": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(iCurvePool)18939": {
            "label": "contract iCurvePool"
          },
          "t_contract(IUniswapV2Router02)20357": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "efe8db10899068d9fc2b0ec7b4d13377532120fd61fc59af6b356581ef26c3d7": {
      "address": "0x2C108a40Bc0996dAFf48de041e01849d782bA88b",
      "txHash": "0xbd9434e6b1bf0f4a27c1f2766c8e75f2a3a4b0c7e8b5058b0e4e059f905fa98e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:125"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20357",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:28"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:33"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:36"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20716",
            "src": "contracts/strategies/StrategyIzumi.sol:42"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20959",
            "src": "contracts/strategies/StrategyIzumi.sol:43"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)19131",
            "src": "contracts/strategies/StrategyIzumi.sol:44"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20816",
            "src": "contracts/strategies/StrategyIzumi.sol:45"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/strategies/StrategyIzumi.sol:47"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerPoolId",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyIzumi.sol:48"
          },
          {
            "contract": "StrategyIzumi",
            "label": "aavePool",
            "type": "t_contract(iCurvePool)18939",
            "src": "contracts/strategies/StrategyIzumi.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20716": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20959": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)19131": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20816": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(iCurvePool)18939": {
            "label": "contract iCurvePool"
          },
          "t_contract(IUniswapV2Router02)20357": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fbc495cf5d8245f4d5ac409c6656b59fe53a21b55eb6b132031760813d0f9e99": {
      "address": "0xF65429a0382D184F306F056859bEc8a9dAe5C919",
      "txHash": "0x444117383239cec7097b697287676516b1ee320599e82ffa651310d60536994d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:125"
          },
          {
            "contract": "BalancerExchange",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/connectors/BalancerExchange.sol:15"
          },
          {
            "contract": "BalancerExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/BalancerExchange.sol:149"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20357",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:13"
          },
          {
            "contract": "StrategyMStable",
            "label": "mUsdToken",
            "type": "t_contract(IMasset)19585",
            "src": "contracts/strategies/StrategyMStable.sol:14"
          },
          {
            "contract": "StrategyMStable",
            "label": "imUsdToken",
            "type": "t_contract(ISavingsContractV2)19706",
            "src": "contracts/strategies/StrategyMStable.sol:15"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdToken",
            "type": "t_contract(IBoostedVaultWithLockup)19358",
            "src": "contracts/strategies/StrategyMStable.sol:16"
          },
          {
            "contract": "StrategyMStable",
            "label": "mtaToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:17"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:18"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:20"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:21"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:22"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId1",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:24"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId2",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:25"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IMasset)19585": {
            "label": "contract IMasset"
          },
          "t_contract(ISavingsContractV2)19706": {
            "label": "contract ISavingsContractV2"
          },
          "t_contract(IBoostedVaultWithLockup)19358": {
            "label": "contract IBoostedVaultWithLockup"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IUniswapV2Router02)20357": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "57b2a70368d1fa6ba73f726ea472042d9fb071c64000f756ffbce8e32767c1e1": {
      "address": "0x5E56Ed1D20Dd74D8B348a43fE698b33B5Aa94E0e",
      "txHash": "0xc5d9c00ad5b6a6a9b31717951429826e9b45ce6ae44cb78d34ce3cb984a93c79",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:125"
          },
          {
            "contract": "StrategyAave",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:11"
          },
          {
            "contract": "StrategyAave",
            "label": "aUsdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:12"
          },
          {
            "contract": "StrategyAave",
            "label": "aaveProvider",
            "type": "t_contract(ILendingPoolAddressesProvider)17269",
            "src": "contracts/strategies/StrategyAave.sol:14"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(ILendingPoolAddressesProvider)17269": {
            "label": "contract ILendingPoolAddressesProvider"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6d10dca84553c0f2957bdaff16d5cc5c40c687840fe90c29446ab819f682602a": {
      "address": "0x13623ee3B7881e1d6199aF2b78277a21A22e9123",
      "txHash": "0xf49220ab400d52c797b7c73e17e3b6189f2c7d6d129c986a4fb37d31f15d1af8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:177"
          },
          {
            "contract": "StrategyAave",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:11"
          },
          {
            "contract": "StrategyAave",
            "label": "aUsdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:12"
          },
          {
            "contract": "StrategyAave",
            "label": "aaveProvider",
            "type": "t_contract(ILendingPoolAddressesProvider)17269",
            "src": "contracts/strategies/StrategyAave.sol:14"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(ILendingPoolAddressesProvider)17269": {
            "label": "contract ILendingPoolAddressesProvider"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0f6b7ba7eb7eea5c20b5a9e7d982ecef7e8a5c28774dfec3f041fbe0573e15eb": {
      "address": "0x949B0F7E16bC7DE405f6F094c99b4A1216F9882E",
      "txHash": "0x46c965812b8af0c351a2be8f77dab418c950c0f64b79742cc6bd5fcd18f90c2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:177"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20357",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:28"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:33"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:36"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20716",
            "src": "contracts/strategies/StrategyIzumi.sol:42"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20959",
            "src": "contracts/strategies/StrategyIzumi.sol:43"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)19131",
            "src": "contracts/strategies/StrategyIzumi.sol:44"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20816",
            "src": "contracts/strategies/StrategyIzumi.sol:45"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/strategies/StrategyIzumi.sol:47"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerPoolId",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyIzumi.sol:48"
          },
          {
            "contract": "StrategyIzumi",
            "label": "aavePool",
            "type": "t_contract(iCurvePool)18939",
            "src": "contracts/strategies/StrategyIzumi.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20716": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20959": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)19131": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20816": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(iCurvePool)18939": {
            "label": "contract iCurvePool"
          },
          "t_contract(IUniswapV2Router02)20357": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1ef55fb437df13cba125e9dc8303a6d702c47d8f57a81ff9e4dd10e3a411dd7b": {
      "address": "0x3ac43E731DB01DBb57842590260aEcCb23012Ec7",
      "txHash": "0xcb79d106455552af949b131d27555e61867b3c73a3f1df662f02f077ea44905a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:159"
          },
          {
            "contract": "StrategyAave",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:11"
          },
          {
            "contract": "StrategyAave",
            "label": "aUsdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:12"
          },
          {
            "contract": "StrategyAave",
            "label": "aaveProvider",
            "type": "t_contract(ILendingPoolAddressesProvider)17269",
            "src": "contracts/strategies/StrategyAave.sol:14"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(ILendingPoolAddressesProvider)17269": {
            "label": "contract ILendingPoolAddressesProvider"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f9753741529108971e800e94540dbb82d84f934e81c2bcd718f5eda527b69843": {
      "address": "0x9e3941Ce7Ac0b273F140037BaD84a740700C6D4a",
      "txHash": "0xcc6719ca4d63ab2ae0d58485a1da747fc56a3081165bb4dd70d8d03757a2bddf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:159"
          },
          {
            "contract": "BalancerExchange",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/connectors/BalancerExchange.sol:15"
          },
          {
            "contract": "BalancerExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/BalancerExchange.sol:149"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20357",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:13"
          },
          {
            "contract": "StrategyMStable",
            "label": "mUsdToken",
            "type": "t_contract(IMasset)19585",
            "src": "contracts/strategies/StrategyMStable.sol:14"
          },
          {
            "contract": "StrategyMStable",
            "label": "imUsdToken",
            "type": "t_contract(ISavingsContractV2)19706",
            "src": "contracts/strategies/StrategyMStable.sol:15"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdToken",
            "type": "t_contract(IBoostedVaultWithLockup)19358",
            "src": "contracts/strategies/StrategyMStable.sol:16"
          },
          {
            "contract": "StrategyMStable",
            "label": "mtaToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:17"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:18"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:20"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:21"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:22"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId1",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:24"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId2",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:25"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IMasset)19585": {
            "label": "contract IMasset"
          },
          "t_contract(ISavingsContractV2)19706": {
            "label": "contract ISavingsContractV2"
          },
          "t_contract(IBoostedVaultWithLockup)19358": {
            "label": "contract IBoostedVaultWithLockup"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IUniswapV2Router02)20357": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "442d145eb538f2667260f9c8f4bdba7eef76c9645e39569da4e44e8906646d92": {
      "address": "0x8aF0174a4844B0AFD396E9dbcf3ad862CD8257d2",
      "txHash": "0xfae6b39b79086f324c55ccd332d84a93dd60401903c6fc70b4020db80fd3a4bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:159"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20357",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:28"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:33"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:36"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20716",
            "src": "contracts/strategies/StrategyIzumi.sol:42"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20959",
            "src": "contracts/strategies/StrategyIzumi.sol:43"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)19131",
            "src": "contracts/strategies/StrategyIzumi.sol:44"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20816",
            "src": "contracts/strategies/StrategyIzumi.sol:45"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/strategies/StrategyIzumi.sol:47"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerPoolId",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyIzumi.sol:48"
          },
          {
            "contract": "StrategyIzumi",
            "label": "aavePool",
            "type": "t_contract(iCurvePool)18939",
            "src": "contracts/strategies/StrategyIzumi.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20716": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20959": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)19131": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20816": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(iCurvePool)18939": {
            "label": "contract iCurvePool"
          },
          "t_contract(IUniswapV2Router02)20357": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f48f081306911550d380c45e318f1dddd533f5064f350be861cf705dbc364f6c": {
      "address": "0x69Bb6D4fbBA47C2B652170a7cBFd82A0814cb224",
      "txHash": "0x093ba1ea8759161af114898370aca3bde921d78f7d2cc7c9b80a928d524cb1fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:159"
          },
          {
            "contract": "StrategyAave",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:11"
          },
          {
            "contract": "StrategyAave",
            "label": "aUsdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:12"
          },
          {
            "contract": "StrategyAave",
            "label": "aaveProvider",
            "type": "t_contract(ILendingPoolAddressesProvider)17402",
            "src": "contracts/strategies/StrategyAave.sol:14"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(ILendingPoolAddressesProvider)17402": {
            "label": "contract ILendingPoolAddressesProvider"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c60818c4529745092951abc5ad7cd296168c07e4ee8eb8337f0775e601bea977": {
      "address": "0x45EA04dE30eBe88D007675B0D07a2A0795Fc300a",
      "txHash": "0xa0fc51169fa82bb48bd67574c292aeeba259341e32854d8148d136b40844ea7d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:159"
          },
          {
            "contract": "BalancerExchange",
            "label": "balancerVault",
            "type": "t_contract(IVault)18819",
            "src": "contracts/connectors/BalancerExchange.sol:15"
          },
          {
            "contract": "BalancerExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/BalancerExchange.sol:149"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20490",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:13"
          },
          {
            "contract": "StrategyMStable",
            "label": "mUsdToken",
            "type": "t_contract(IMasset)19718",
            "src": "contracts/strategies/StrategyMStable.sol:14"
          },
          {
            "contract": "StrategyMStable",
            "label": "imUsdToken",
            "type": "t_contract(ISavingsContractV2)19839",
            "src": "contracts/strategies/StrategyMStable.sol:15"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdToken",
            "type": "t_contract(IBoostedVaultWithLockup)19491",
            "src": "contracts/strategies/StrategyMStable.sol:16"
          },
          {
            "contract": "StrategyMStable",
            "label": "mtaToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:17"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:18"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:20"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:21"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:22"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId1",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:24"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId2",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:25"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IMasset)19718": {
            "label": "contract IMasset"
          },
          "t_contract(ISavingsContractV2)19839": {
            "label": "contract ISavingsContractV2"
          },
          "t_contract(IBoostedVaultWithLockup)19491": {
            "label": "contract IBoostedVaultWithLockup"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IUniswapV2Router02)20490": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IVault)18819": {
            "label": "contract IVault"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3d16bd04618bc04701c2165ba95ebdde9d054c207b34ad910e25a00920d25c3d": {
      "address": "0x370787B8fC9202CcB25591345622590cD7bdc005",
      "txHash": "0x9a2a43882cb4724ec052836fd1515ce8bb7d60abe678f8a173c09a5084040ed3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:159"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20490",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:28"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:33"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:36"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20849",
            "src": "contracts/strategies/StrategyIzumi.sol:42"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)21092",
            "src": "contracts/strategies/StrategyIzumi.sol:43"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)19264",
            "src": "contracts/strategies/StrategyIzumi.sol:44"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20949",
            "src": "contracts/strategies/StrategyIzumi.sol:45"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerVault",
            "type": "t_contract(IVault)18819",
            "src": "contracts/strategies/StrategyIzumi.sol:47"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerPoolId",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyIzumi.sol:48"
          },
          {
            "contract": "StrategyIzumi",
            "label": "aavePool",
            "type": "t_contract(iCurvePool)19072",
            "src": "contracts/strategies/StrategyIzumi.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20849": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)21092": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)19264": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20949": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IVault)18819": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(iCurvePool)19072": {
            "label": "contract iCurvePool"
          },
          "t_contract(IUniswapV2Router02)20490": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "de1a6be5582e00fb08f6485929855c0a75b2401aa676d74f4ee030c77fba15af": {
      "address": "0xc894B337ce4b42214Cde47D8B32c0D8F07101295",
      "txHash": "0x2407fca3e24eb5786ce93d8c69fdd2faa2a5b19d8d9c5ca18c6848a0718ffa28",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:123"
          },
          {
            "contract": "StrategyAave",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:11"
          },
          {
            "contract": "StrategyAave",
            "label": "aUsdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyAave.sol:12"
          },
          {
            "contract": "StrategyAave",
            "label": "aaveProvider",
            "type": "t_contract(ILendingPoolAddressesProvider)17269",
            "src": "contracts/strategies/StrategyAave.sol:14"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(ILendingPoolAddressesProvider)17269": {
            "label": "contract ILendingPoolAddressesProvider"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "da1f891b661787b0a77bbd79383f22a9902b10fecf260b90a1e7a7f548668eaf": {
      "address": "0x66dd28A4B6e169D1A5373BcFc318252c621fCeD5",
      "txHash": "0xf362c40850be98fe93c22006a3cf2afa0a03fb7492a29ffb0e1edd46c930f9f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:123"
          },
          {
            "contract": "BalancerExchange",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/connectors/BalancerExchange.sol:15"
          },
          {
            "contract": "BalancerExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/BalancerExchange.sol:149"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20357",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:13"
          },
          {
            "contract": "StrategyMStable",
            "label": "mUsdToken",
            "type": "t_contract(IMasset)19585",
            "src": "contracts/strategies/StrategyMStable.sol:14"
          },
          {
            "contract": "StrategyMStable",
            "label": "imUsdToken",
            "type": "t_contract(ISavingsContractV2)19706",
            "src": "contracts/strategies/StrategyMStable.sol:15"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdToken",
            "type": "t_contract(IBoostedVaultWithLockup)19358",
            "src": "contracts/strategies/StrategyMStable.sol:16"
          },
          {
            "contract": "StrategyMStable",
            "label": "mtaToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:17"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyMStable.sol:18"
          },
          {
            "contract": "StrategyMStable",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:20"
          },
          {
            "contract": "StrategyMStable",
            "label": "vimUsdTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:21"
          },
          {
            "contract": "StrategyMStable",
            "label": "wmaticTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyMStable.sol:22"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId1",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:24"
          },
          {
            "contract": "StrategyMStable",
            "label": "balancerPoolId2",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyMStable.sol:25"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IMasset)19585": {
            "label": "contract IMasset"
          },
          "t_contract(ISavingsContractV2)19706": {
            "label": "contract ISavingsContractV2"
          },
          "t_contract(IBoostedVaultWithLockup)19358": {
            "label": "contract IBoostedVaultWithLockup"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IUniswapV2Router02)20357": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "97816e5aefde706c32e7685b4e1873232c2a4b327a4269508c6a31ea8437a8fc": {
      "address": "0x5b9f5a6a95FFC354AB916fB6946982A688A5f013",
      "txHash": "0x6c0f33eea1a51d85dcfa25916c8e9624208afb7b6caa850d771ce7b51f1475ed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:123"
          },
          {
            "contract": "QuickswapExchange",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)20357",
            "src": "contracts/connectors/QuickswapExchange.sol:10"
          },
          {
            "contract": "QuickswapExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/QuickswapExchange.sol:51"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:27"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:28"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:29"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:30"
          },
          {
            "contract": "StrategyIzumi",
            "label": "wethToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyIzumi.sol:31"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapToken",
            "type": "t_contract(IERC721)10138",
            "src": "contracts/strategies/StrategyIzumi.sol:33"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdcTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:35"
          },
          {
            "contract": "StrategyIzumi",
            "label": "usdtTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:36"
          },
          {
            "contract": "StrategyIzumi",
            "label": "iziTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:37"
          },
          {
            "contract": "StrategyIzumi",
            "label": "yinTokenDenominator",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:38"
          },
          {
            "contract": "StrategyIzumi",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/strategies/StrategyIzumi.sol:40"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapPositionManager",
            "type": "t_contract(INonfungiblePositionManager)20716",
            "src": "contracts/strategies/StrategyIzumi.sol:42"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Pool",
            "type": "t_contract(IUniswapV3Pool)20959",
            "src": "contracts/strategies/StrategyIzumi.sol:43"
          },
          {
            "contract": "StrategyIzumi",
            "label": "izumiBoost",
            "type": "t_contract(MiningFixRangeBoost)19131",
            "src": "contracts/strategies/StrategyIzumi.sol:44"
          },
          {
            "contract": "StrategyIzumi",
            "label": "uniswapV3Router",
            "type": "t_contract(ISwapRouter)20816",
            "src": "contracts/strategies/StrategyIzumi.sol:45"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerVault",
            "type": "t_contract(IVault)18686",
            "src": "contracts/strategies/StrategyIzumi.sol:47"
          },
          {
            "contract": "StrategyIzumi",
            "label": "balancerPoolId",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyIzumi.sol:48"
          },
          {
            "contract": "StrategyIzumi",
            "label": "aavePool",
            "type": "t_contract(iCurvePool)18939",
            "src": "contracts/strategies/StrategyIzumi.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IERC721)10138": {
            "label": "contract IERC721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INonfungiblePositionManager)20716": {
            "label": "contract INonfungiblePositionManager"
          },
          "t_contract(IUniswapV3Pool)20959": {
            "label": "contract IUniswapV3Pool"
          },
          "t_contract(MiningFixRangeBoost)19131": {
            "label": "contract MiningFixRangeBoost"
          },
          "t_contract(ISwapRouter)20816": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IVault)18686": {
            "label": "contract IVault"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(iCurvePool)18939": {
            "label": "contract iCurvePool"
          },
          "t_contract(IUniswapV2Router02)20357": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f995245a31d105cd902e9359a5d179defee2db527870b1f8295a09846f27ce38": {
      "address": "0xb37729E716B7Cf2a72073474592f83D0daC3EaF9",
      "txHash": "0xb19dc9d33520a5010597588ea2c4753c6c43d30a4751fac484750ded5bc31678",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Strategy",
            "label": "portfolioManager",
            "type": "t_address",
            "src": "contracts/strategies/Strategy.sol:16"
          },
          {
            "contract": "Strategy",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/strategies/Strategy.sol:123"
          },
          {
            "contract": "BalancerExchange",
            "label": "balancerVault",
            "type": "t_contract(IVault)18816",
            "src": "contracts/connectors/BalancerExchange.sol:15"
          },
          {
            "contract": "BalancerExchange",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/connectors/BalancerExchange.sol:178"
          },
          {
            "contract": "StrategyImpermaxQsUsdcUsdt",
            "label": "usdcToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyImpermaxQsUsdcUsdt.sol:14"
          },
          {
            "contract": "StrategyImpermaxQsUsdcUsdt",
            "label": "usdtToken",
            "type": "t_contract(IERC20)8922",
            "src": "contracts/strategies/StrategyImpermaxQsUsdcUsdt.sol:15"
          },
          {
            "contract": "StrategyImpermaxQsUsdcUsdt",
            "label": "imxBToken",
            "type": "t_contract(IPoolToken)19341",
            "src": "contracts/strategies/StrategyImpermaxQsUsdcUsdt.sol:16"
          },
          {
            "contract": "StrategyImpermaxQsUsdcUsdt",
            "label": "balancerPoolId",
            "type": "t_bytes32",
            "src": "contracts/strategies/StrategyImpermaxQsUsdcUsdt.sol:18"
          },
          {
            "contract": "StrategyImpermaxQsUsdcUsdt",
            "label": "impermaxRouter",
            "type": "t_contract(ImpermaxRouter)19402",
            "src": "contracts/strategies/StrategyImpermaxQsUsdcUsdt.sol:20"
          },
          {
            "contract": "StrategyImpermaxQsUsdcUsdt",
            "label": "pair",
            "type": "t_contract(IUniswapV2Pair)20243",
            "src": "contracts/strategies/StrategyImpermaxQsUsdcUsdt.sol:21"
          }
        ],
        "types": {
          "t_contract(IERC20)8922": {
            "label": "contract IERC20"
          },
          "t_contract(IPoolToken)19341": {
            "label": "contract IPoolToken"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ImpermaxRouter)19402": {
            "label": "contract ImpermaxRouter"
          },
          "t_contract(IUniswapV2Pair)20243": {
            "label": "contract IUniswapV2Pair"
          },
          "t_contract(IVault)18816": {
            "label": "contract IVault"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}

{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x236eeC6359fb44CCe8f97E99387aa7F8cd5cdE1f",
      "txHash": "0x9d94ab7ac97839c259b83933b7976e0a3ef471cd17dd5bff3972d33aa22ab0d7",
      "kind": "uups"
    },
    {
      "address": "0xDd6096d2caed9AEF96d7E7a96d8bceE327894C69",
      "txHash": "0x164410f663176db7bacfc7b0242a4dcf0e5b9b8f19acc4d56cb4c1899d6c5f3f",
      "kind": "uups"
    },
    {
      "address": "0x5885E81C9e509c95366f63FD4608FBA73C545cEA",
      "txHash": "0x214dec669cfa1f1f2bdb30b1db1a73fbb6a8f3a84def4f3272f788507469db63",
      "kind": "uups"
    },
    {
      "address": "0x1502c03D8d6b06bF98F48fB8F0a9752d6626D497",
      "txHash": "0xcaa854bcc43a52d51fc845bd995cf8c32b2f385d653d1aeb3dbe31f28d3c088d",
      "kind": "uups"
    },
    {
    "address": "0x61B9fF9aDD9b143D399134c09235E97dF6bAe4B2",
    "txHash": "0xfbc29e2f8f26ab5223e867ba141aed14d0dd5c8cbf3923d0142c5c7ab2df512d",
    "kind": "uups"
    },
    {
      "address": "0x7B5EDC1C0b0E7212a08deb2392EfBf7845fa019e",
      "txHash": "0x6b72e8ba2467f7970f1d1783efdfb2f6b850bbc4fda6f549618ad1dae0f1c1db",
      "kind": "uups"
    },
    {
      "address": "0xA484E394C9Ae2Af31F0C06089C30A9aDcA8666f0",
      "txHash": "0x5fe01d9b40973b744533cdb02868d48565513e8706ba7cfdef4a2912bbf13b5e",
      "kind": "uups"
    },
    {
      "address": "0xC4C4f19e0c807081e9c18c64484b800Fd7Cd08C7",
      "txHash": "0x5502ef3eb851c4edd89cde251a2e0e38d74f188bab74c7dc5b8c4e7fab798fbd",
      "kind": "uups"
    },
    {
      "address": "0x2b2139C4B82c46D43Cb4C690DeC314140d74EC4A",
      "txHash": "0x131203bed97d416128923b45f3db3c25479097254303d4e4fe42f8b774412b18",
      "kind": "uups"
    },

  ],
  "impls": {
    "493ebb897f777743ed8f9bc22e21ade1302294fe04289d5292ae44190578e608": {
      "address": "0x8ef6b9531743255e0a943951b9fadd757966176a",
      "txHash": "0x09cfd5721ab7ce8345ff929fd7cefd1d35b4e9d60cb0d853833d4c629b78af68",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/UsdPlusToken.sol:19"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/UsdPlusToken.sol:21"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:23"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/UsdPlusToken.sol:25"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/UsdPlusToken.sol:26"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalMint",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:33"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_totalBurn",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:34"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndexChangeTime",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:36"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndex",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:37"
          },
          {
            "contract": "UsdPlusToken",
            "label": "liquidityIndexDenominator",
            "type": "t_uint256",
            "src": "contracts/UsdPlusToken.sol:38"
          },
          {
            "contract": "UsdPlusToken",
            "label": "_owners",
            "type": "t_struct(AddressSet)12086_storage",
            "src": "contracts/UsdPlusToken.sol:40"
          },
          {
            "contract": "UsdPlusToken",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/UsdPlusToken.sol:500"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(AddressSet)12086_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)11785_storage"
              }
            ]
          },
          "t_struct(Set)11785_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "e24c0b18946417ecdce1c7cf64e3afc30839732a74722f22b6ae63a8f0cddba3": {
      "address": "0x44cd53c5fa8f64a102d629924ab664e4d17c05e2",
      "txHash": "0x281f50908bfaa11688087870c648ff0c6422af4e5bbc1799a4c6f86bdeba74c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Exchange",
            "label": "usdPlus",
            "type": "t_contract(UsdPlusToken)16496",
            "src": "contracts/Exchange.sol:23"
          },
          {
            "contract": "Exchange",
            "label": "usdc",
            "type": "t_contract(IERC20)9027",
            "src": "contracts/Exchange.sol:24"
          },
          {
            "contract": "Exchange",
            "label": "portfolioManager",
            "type": "t_contract(PortfolioManager)15215",
            "src": "contracts/Exchange.sol:26"
          },
          {
            "contract": "Exchange",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)21290",
            "src": "contracts/Exchange.sol:27"
          },
          {
            "contract": "Exchange",
            "label": "buyFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:29"
          },
          {
            "contract": "Exchange",
            "label": "buyFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:30"
          },
          {
            "contract": "Exchange",
            "label": "redeemFee",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:32"
          },
          {
            "contract": "Exchange",
            "label": "redeemFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:33"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimit",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:36"
          },
          {
            "contract": "Exchange",
            "label": "notEnoughLimitDenominator",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:37"
          },
          {
            "contract": "Exchange",
            "label": "nextPayoutTime",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:40"
          },
          {
            "contract": "Exchange",
            "label": "payoutPeriod",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:43"
          },
          {
            "contract": "Exchange",
            "label": "payoutTimeRange",
            "type": "t_uint256",
            "src": "contracts/Exchange.sol:50"
          }
        ],
        "types": {
          "t_contract(UsdPlusToken)16496": {
            "label": "contract UsdPlusToken"
          },
          "t_contract(IERC20)9027": {
            "label": "contract IERC20"
          },
          "t_contract(PortfolioManager)15215": {
            "label": "contract PortfolioManager"
          },
          "t_contract(IMark2Market)21290": {
            "label": "contract IMark2Market"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "bf4db58d0ca35dcfa2271535375920fd8c8bc6c21f8d00c0203fee09358f9e97": {
      "address": "0x152bb8874b4a35dc720f3e518fbe58881ab01d37",
      "txHash": "0xd218bce5cf992ae8d74511ab1948484ff437562dc09063b47ef82816e309e4a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Balancer",
            "label": "mark2market",
            "type": "t_contract(IMark2Market)21290",
            "src": "contracts/Balancer.sol:18"
          },
          {
            "contract": "Balancer",
            "label": "actionBuilders",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Balancer.sol:19"
          }
        ],
        "types": {
          "t_contract(IMark2Market)21290": {
            "label": "contract IMark2Market"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "29eda9a2a0da2fd5c1bd30b48311f5dcd748b99a023d954f72c1aa1eba40c233": {
      "address": "0x6640f32f7cf5cb6f9acdb1890d4c16fd279b4f10",
      "txHash": "0xcaa854bcc43a52d51fc845bd995cf8c32b2f385d653d1aeb3dbe31f28d3c088d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Mark2Market",
            "label": "vault",
            "type": "t_contract(Vault)16845",
            "src": "contracts/Mark2Market.sol:22"
          },
          {
            "contract": "Mark2Market",
            "label": "portfolio",
            "type": "t_contract(Portfolio)22916",
            "src": "contracts/Mark2Market.sol:23"
          }
        ],
        "types": {
          "t_contract(Vault)16845": {
            "label": "contract Vault"
          },
          "t_contract(Portfolio)22916": {
            "label": "contract Portfolio"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "91a4b000e5f0390a734a3d47f458f6c2711efc5d6c7ea8b19ce7d9cf32b862ff": {
      "address": "0x880dc1a641aef94b0d82b12901b13d86f11f5549",
      "txHash":  "0xf85167978e39d7cde5b0a0d1cba1359818c03845ae2360a261e9dc229282bffa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PortfolioManager",
            "label": "exchanger",
            "type": "t_address",
            "src": "contracts/PortfolioManager.sol:25"
          },
          {
            "contract": "PortfolioManager",
            "label": "vault",
            "type": "t_contract(Vault)16845",
            "src": "contracts/PortfolioManager.sol:26"
          },
          {
            "contract": "PortfolioManager",
            "label": "balancer",
            "type": "t_contract(Balancer)12739",
            "src": "contracts/PortfolioManager.sol:27"
          },
          {
            "contract": "PortfolioManager",
            "label": "rewardManager",
            "type": "t_contract(IRewardManager)21356",
            "src": "contracts/PortfolioManager.sol:28"
          },
          {
            "contract": "PortfolioManager",
            "label": "portfolio",
            "type": "t_contract(Portfolio)22916",
            "src": "contracts/PortfolioManager.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(Vault)16845": {
            "label": "contract Vault"
          },
          "t_contract(Balancer)12739": {
            "label": "contract Balancer"
          },
          "t_contract(IRewardManager)21356": {
            "label": "contract IRewardManager"
          },
          "t_contract(Portfolio)22916": {
            "label": "contract Portfolio"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "b7a09fcf22bec82b8aed1b0e2a37b85de1dd39c71d4b68e7cd7a3fb45c681e7d": {
      "address": "0xd7accaf9037bd9898abb7320cbce7504daff028c",
      "txHash": "0xfa2d884eac57823504e4fd19d7835ccb9ceecfd214d699ad40c62f437b02d40b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "RewardManager",
            "label": "rewardGauge",
            "type": "t_contract(IRewardOnlyGauge)19953",
            "src": "contracts/RewardManager.sol:21"
          },
          {
            "contract": "RewardManager",
            "label": "vault",
            "type": "t_contract(Vault)16845",
            "src": "contracts/RewardManager.sol:22"
          },
          {
            "contract": "RewardManager",
            "label": "aUsdc",
            "type": "t_contract(IERC20)9027",
            "src": "contracts/RewardManager.sol:23"
          }
        ],
        "types": {
          "t_contract(IRewardOnlyGauge)19953": {
            "label": "contract IRewardOnlyGauge"
          },
          "t_contract(Vault)16845": {
            "label": "contract Vault"
          },
          "t_contract(IERC20)9027": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "e7cb2765e2b034c3d2549d4decd791a8a775d2e2f3a8c182c585174b0b5f051b": {
      "address": "0x9116D39c7DFd223297F8b168635E6c0eFf44161f",
      "txHash": "0x2dc0fc7796b2544231290b39f5c4c28f1d5163b6e267810396720454ce9e6ba2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Vault",
            "label": "aaveReward",
            "type": "t_contract(IAaveIncentivesController)19280",
            "src": "contracts/Vault.sol:28"
          }
        ],
        "types": {
          "t_contract(IAaveIncentivesController)19280": {
            "label": "contract IAaveIncentivesController"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "a4c2edd678a7bedf8dd1bce4ac2ae8be976cbac0a16f4ead010ab678b8f4ba80": {
      "address": "0x236b82944aaf4c152cf2275e8168306f94840c7d",
      "txHash": "0x851aa73a4ced879d857e4750603090cc2717d67f94751dbcf9c0a436c6eff965",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)2950_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:94"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:40"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1761_storage)dyn_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:41"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_totalSupplyCheckpoints",
            "type": "t_array(t_struct(Checkpoint)1761_storage)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:263"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1761_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)1761_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)1761_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_struct(Counter)2950_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)2950_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "9f9d3cc2c8559938cd385849eadad4245e4a4e8e1c4030d5198fa2be0533e198": {
      "address": "0x591aaf32866f314bc8ff109a77a87ee9fcd86877",
      "txHash": "0x3e467c188ed100e2e9905573672ba5af5934761dd0300fa98591c8f7b5ea017e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Portfolio",
            "label": "assetInfoPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/registries/Portfolio.sol:13"
          },
          {
            "contract": "Portfolio",
            "label": "assetInfos",
            "type": "t_array(t_struct(AssetInfo)22458_storage)dyn_storage",
            "src": "contracts/registries/Portfolio.sol:14"
          },
          {
            "contract": "Portfolio",
            "label": "assetWeightPositions",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/registries/Portfolio.sol:15"
          },
          {
            "contract": "Portfolio",
            "label": "assetWeights",
            "type": "t_array(t_struct(AssetWeight)22453_storage)dyn_storage",
            "src": "contracts/registries/Portfolio.sol:16"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(AssetInfo)22458_storage)dyn_storage": {
            "label": "struct Portfolio.AssetInfo[]"
          },
          "t_struct(AssetInfo)22458_storage": {
            "label": "struct Portfolio.AssetInfo",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "priceGetter",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(AssetWeight)22453_storage)dyn_storage": {
            "label": "struct Portfolio.AssetWeight[]"
          },
          "t_struct(AssetWeight)22453_storage": {
            "label": "struct Portfolio.AssetWeight",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "minWeight",
                "type": "t_uint256"
              },
              {
                "label": "targetWeight",
                "type": "t_uint256"
              },
              {
                "label": "maxWeight",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}

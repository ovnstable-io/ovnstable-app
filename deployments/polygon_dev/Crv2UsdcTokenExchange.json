{
  "address": "0x827Ad629ec67dc1fDCEC64E3899d7675E3e24440",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_swapRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_crvToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "crvToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x20bb858ffca2044cd717724e6bca86f7812635cc5e0f68bdf4b17089baa84838",
  "receipt": {
    "to": null,
    "from": "0x5CB01385d3097b6a189d1ac8BA3364D900666445",
    "contractAddress": "0x827Ad629ec67dc1fDCEC64E3899d7675E3e24440",
    "transactionIndex": 30,
    "gasUsed": "873399",
    "logsBloom": "0x
    "blockHash": "0xf5de9a7e9a11bd2d3b5eae0438b60f8a43a53326e0f0e139f60b1bf777561de7",
    "transactionHash": "0x20bb858ffca2044cd717724e6bca86f7812635cc5e0f68bdf4b17089baa84838",
    "logs": [
      {
        "transactionIndex": 30,
        "blockNumber": 24143140,
        "transactionHash": "0x20bb858ffca2044cd717724e6bca86f7812635cc5e0f68bdf4b17089baa84838",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005cb01385d3097b6a189d1ac8ba3364d900666445",
          "0x0000000000000000000000007c7379531b2aee82e4ca06d4175d13b9cbeafd49"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000081ba592b4924ce000000000000000000000000000000000000000000000005934732dd440c84b5000000000000000000000000000000000000000000009c0750d89d7f6968362700000000000000000000000000000000000000000000000592c5788418c35fe7000000000000000000000000000000000000000000009c07515a57d894b15af5",
        "logIndex": 116,
        "blockHash": "0xf5de9a7e9a11bd2d3b5eae0438b60f8a43a53326e0f0e139f60b1bf777561de7"
      }
    ],
    "blockNumber": 24143140,
    "cumulativeGasUsed": "5317172",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa5e0829caced8ffdd4de3c43696c57f7d7a678ff",
    "0x2791bca1f2de4661ed88a30c99a7a9449aa84174",
    "0x172370d5Cd63279eFa6d502DAB29171933a610AF"
  ],
  "solcInputHash": "fe95cbbb2d97e4d95ece85093db98e18",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_crvToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"crvToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token_exchanges/Crv2UsdcTokenExchange.sol\":\"Crv2UsdcTokenExchange\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x842c66d5965ed0bf77f274732c2a93a7e2223d53171ec9cccc473bde75104ead\",\"license\":\"MIT\"},\"contracts/connectors/swaps/interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-3\\npragma solidity >=0.6.2;\\n\\n/**\\n * IUniswapV2Router01.sol is copy of https://github.com/Uniswap/v2-periphery/blob/master/contracts/interfaces/IUniswapV2Router01.sol\\n */\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n\\n\\n}\\n\",\"keccak256\":\"0x8635dc634259e971de8edde1ac635dd2338e5223370c9a6e22ed58527cdbab07\",\"license\":\"GNU-3\"},\"contracts/connectors/swaps/interfaces/IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-3\\npragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\n/**\\n * IUniswapV2Router02.sol is copy of https://github.com/Uniswap/v2-periphery/blob/master/contracts/interfaces/IUniswapV2Router02.sol\\n */\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n\\n    function pairFor(address factoryC, address tokenA, address tokenB) external view returns (address pair) ;\\n\\n}\\n\",\"keccak256\":\"0x5ca1e640d0522c5fdcb8814e1c7972435a71e589703741f7ffdaf2116fcb6cb3\",\"license\":\"GNU-3\"},\"contracts/interfaces/ITokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ITokenExchange {\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external;\\n\\n}\\n\",\"keccak256\":\"0x5b882bdf0c53f3ad4e7a281ad884af921b2c7ff16517bf56e50f253fc58b5bbc\",\"license\":\"GPL-3.0\"},\"contracts/token_exchanges/Crv2UsdcTokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../interfaces/ITokenExchange.sol\\\";\\nimport \\\"../connectors/swaps/interfaces/IUniswapV2Router02.sol\\\";\\n\\ncontract Crv2UsdcTokenExchange is ITokenExchange {\\n    IUniswapV2Router02 public swapRouter;\\n    IERC20 public usdcToken;\\n    IERC20 public crvToken;\\n\\n    constructor(\\n        address _swapRouter,\\n        address _usdcToken,\\n        address _crvToken\\n    ) {\\n        require(_swapRouter != address(0), \\\"Zero address not allowed\\\");\\n        require(_usdcToken != address(0), \\\"Zero address not allowed\\\");\\n        require(_crvToken != address(0), \\\"Zero address not allowed\\\");\\n\\n        swapRouter = IUniswapV2Router02(_swapRouter);\\n        usdcToken = IERC20(_usdcToken);\\n        crvToken = IERC20(_crvToken);\\n    }\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external override {\\n        require(\\n            (from == usdcToken && to == crvToken) || (from == crvToken && to == usdcToken),\\n            \\\"Crv2UsdcTokenExchange: Some token not compatible\\\"\\n        );\\n\\n        if (amount == 0) {\\n            from.transfer(spender, from.balanceOf(address(this)));\\n            return;\\n        }\\n\\n        if (from == usdcToken && to == crvToken) {\\n            revert(\\\"Crv2UsdcTokenExchange: Allowed only exchange CRV to USDC\\\");\\n        } else {\\n            //TODO: denominator usage\\n            uint256 denominator = 10**(18 - IERC20Metadata(address(crvToken)).decimals());\\n            amount = amount / denominator;\\n\\n            require(\\n                crvToken.balanceOf(address(this)) >= amount,\\n                \\\"Crv2UsdcTokenExchange: Not enough crvToken\\\"\\n            );\\n\\n            // check after denormilization\\n            if (amount == 0) {\\n                from.transfer(spender, from.balanceOf(address(this)));\\n                return;\\n            }\\n\\n            address[] memory path = new address[](2);\\n            path[0] = address(crvToken);\\n            path[1] = address(usdcToken);\\n\\n            uint[] memory amountsOut = swapRouter.getAmountsOut(amount, path);\\n            // 6 + 18 - 18 = 6 - not normilized USDC in native 6 decimals\\n            uint256 estimateUsdcOut = (amountsOut[1] * (10**18)) / amountsOut[0];\\n            // skip exchange if estimate USDC less than 3 shares to prevent INSUFFICIENT_OUTPUT_AMOUNT error\\n            // TODO: may be enough 2 or insert check ratio IN/OUT to make decision\\n            if (estimateUsdcOut < 3) {\\n                from.transfer(spender, from.balanceOf(address(this)));\\n                return;\\n            }\\n\\n            crvToken.approve(address(swapRouter), amount);\\n\\n            // TODO: use some calculation or Oracle call instead of usage '0' as amountOutMin\\n            swapRouter.swapExactTokensForTokens(\\n                amount, //    uint amountIn,\\n                0, //          uint amountOutMin,\\n                path,\\n                receiver,\\n                block.timestamp + 600 // 10 mins\\n            );\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x757438481e41e0c7ff526519d58f6455846d65162435355c00ef09647c207e13\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000f6438038062000f6483398101604081905262000034916200016d565b6001600160a01b0383166200007f5760405162461bcd60e51b8152602060048201526018602482015260008051602062000f4483398151915260448201526064015b60405180910390fd5b6001600160a01b038216620000c65760405162461bcd60e51b8152602060048201526018602482015260008051602062000f44833981519152604482015260640162000076565b6001600160a01b0381166200010d5760405162461bcd60e51b8152602060048201526018602482015260008051602062000f44833981519152604482015260640162000076565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620001b7565b80516001600160a01b03811681146200016857600080fd5b919050565b6000806000606084860312156200018357600080fd5b6200018e8462000150565b92506200019e6020850162000150565b9150620001ae6040850162000150565b90509250925092565b610d7d80620001c76000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806311eac8551461005157806332d7d66d1461008057806362ac753814610093578063c31c9c07146100a8575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600254610064906001600160a01b031681565b6100a66100a1366004610952565b6100bb565b005b600054610064906001600160a01b031681565b6001546001600160a01b0385811691161480156100e557506002546001600160a01b038381169116145b8061011557506002546001600160a01b03858116911614801561011557506001546001600160a01b038381169116145b61017f5760405162461bcd60e51b815260206004820152603060248201527f4372763255736463546f6b656e45786368616e67653a20536f6d6520746f6b6560448201526f6e206e6f7420636f6d70617469626c6560801b60648201526084015b60405180910390fd5b80610289576040516370a0823160e01b81523060048201526001600160a01b0385169063a9059cbb90879083906370a082319060240160206040518083038186803b1580156101cd57600080fd5b505afa1580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102059190610aa4565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561024b57600080fd5b505af115801561025f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102839190610a7b565b5061094b565b6001546001600160a01b0385811691161480156102b357506002546001600160a01b038381169116145b156103265760405162461bcd60e51b815260206004820152603860248201527f4372763255736463546f6b656e45786368616e67653a20416c6c6f776564206f60448201527f6e6c792065786368616e67652043525620746f205553444300000000000000006064820152608401610176565b6002546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561036b57600080fd5b505afa15801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a39190610abd565b6103ae906012610cca565b6103b990600a610bfe565b90506103c58183610b99565b6002546040516370a0823160e01b815230600482015291935083916001600160a01b03909116906370a082319060240160206040518083038186803b15801561040d57600080fd5b505afa158015610421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104459190610aa4565b10156104a65760405162461bcd60e51b815260206004820152602a60248201527f4372763255736463546f6b656e45786368616e67653a204e6f7420656e6f7567604482015269341031b93b2a37b5b2b760b11b6064820152608401610176565b816105b1576040516370a0823160e01b81523060048201526001600160a01b0386169063a9059cbb90889083906370a082319060240160206040518083038186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190610aa4565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa9190610a7b565b505061094b565b604080516002808252606082018352600092602083019080368337505060025482519293506001600160a01b0316918391506000906105f2576105f2610d03565b6001600160a01b039283166020918202929092010152600180548351921691839190811061062257610622610d03565b6001600160a01b0392831660209182029290920101526000805460405163d06ca61f60e01b81529192169063d06ca61f906106639087908690600401610b24565b60006040518083038186803b15801561067b57600080fd5b505afa15801561068f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106b791908101906109b6565b90506000816000815181106106ce576106ce610d03565b6020026020010151826001815181106106e9576106e9610d03565b6020026020010151670de0b6b3a76400006107049190610cab565b61070e9190610b99565b90506003811015610822576040516370a0823160e01b81523060048201526001600160a01b0389169063a9059cbb908b9083906370a082319060240160206040518083038186803b15801561076257600080fd5b505afa158015610776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079a9190610aa4565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156107e057600080fd5b505af11580156107f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108189190610a7b565b505050505061094b565b60025460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810188905291169063095ea7b390604401602060405180830381600087803b15801561087257600080fd5b505af1158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa9190610a7b565b50600080546001600160a01b0316906338ed1739908790868b6108cf42610258610b81565b6040518663ffffffff1660e01b81526004016108ef959493929190610b45565b600060405180830381600087803b15801561090957600080fd5b505af115801561091d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261094591908101906109b6565b50505050505b5050505050565b600080600080600060a0868803121561096a57600080fd5b853561097581610d2f565b9450602086013561098581610d2f565b9350604086013561099581610d2f565b925060608601356109a581610d2f565b949793965091946080013592915050565b600060208083850312156109c957600080fd5b825167ffffffffffffffff808211156109e157600080fd5b818501915085601f8301126109f557600080fd5b815181811115610a0757610a07610d19565b8060051b604051601f19603f83011681018181108582111715610a2c57610a2c610d19565b604052828152858101935084860182860187018a1015610a4b57600080fd5b600095505b83861015610a6e578051855260019590950194938601938601610a50565b5098975050505050505050565b600060208284031215610a8d57600080fd5b81518015158114610a9d57600080fd5b9392505050565b600060208284031215610ab657600080fd5b5051919050565b600060208284031215610acf57600080fd5b815160ff81168114610a9d57600080fd5b600081518084526020808501945080840160005b83811015610b195781516001600160a01b031687529582019590820190600101610af4565b509495945050505050565b828152604060208201526000610b3d6040830184610ae0565b949350505050565b85815284602082015260a060408201526000610b6460a0830186610ae0565b6001600160a01b0394909416606083015250608001529392505050565b60008219821115610b9457610b94610ced565b500190565b600082610bb657634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610bf6578160001904821115610bdc57610bdc610ced565b80851615610be957918102915b93841c9390800290610bc0565b509250929050565b6000610a9d60ff841683600082610c1757506001610ca5565b81610c2457506000610ca5565b8160018114610c3a5760028114610c4457610c60565b6001915050610ca5565b60ff841115610c5557610c55610ced565b50506001821b610ca5565b5060208310610133831016604e8410600b8410161715610c83575081810a610ca5565b610c8d8383610bbb565b8060001904821115610ca157610ca1610ced565b0290505b92915050565b6000816000190483118215151615610cc557610cc5610ced565b500290565b600060ff821660ff841680821015610ce457610ce4610ced565b90039392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d4457600080fd5b5056fea26469706673582212203daa09f5c5ffcf9f6216833010965bcc8a8fbe6b01bac5dc717e444b71f6469864736f6c634300080600335a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806311eac8551461005157806332d7d66d1461008057806362ac753814610093578063c31c9c07146100a8575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600254610064906001600160a01b031681565b6100a66100a1366004610952565b6100bb565b005b600054610064906001600160a01b031681565b6001546001600160a01b0385811691161480156100e557506002546001600160a01b038381169116145b8061011557506002546001600160a01b03858116911614801561011557506001546001600160a01b038381169116145b61017f5760405162461bcd60e51b815260206004820152603060248201527f4372763255736463546f6b656e45786368616e67653a20536f6d6520746f6b6560448201526f6e206e6f7420636f6d70617469626c6560801b60648201526084015b60405180910390fd5b80610289576040516370a0823160e01b81523060048201526001600160a01b0385169063a9059cbb90879083906370a082319060240160206040518083038186803b1580156101cd57600080fd5b505afa1580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102059190610aa4565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561024b57600080fd5b505af115801561025f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102839190610a7b565b5061094b565b6001546001600160a01b0385811691161480156102b357506002546001600160a01b038381169116145b156103265760405162461bcd60e51b815260206004820152603860248201527f4372763255736463546f6b656e45786368616e67653a20416c6c6f776564206f60448201527f6e6c792065786368616e67652043525620746f205553444300000000000000006064820152608401610176565b6002546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561036b57600080fd5b505afa15801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a39190610abd565b6103ae906012610cca565b6103b990600a610bfe565b90506103c58183610b99565b6002546040516370a0823160e01b815230600482015291935083916001600160a01b03909116906370a082319060240160206040518083038186803b15801561040d57600080fd5b505afa158015610421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104459190610aa4565b10156104a65760405162461bcd60e51b815260206004820152602a60248201527f4372763255736463546f6b656e45786368616e67653a204e6f7420656e6f7567604482015269341031b93b2a37b5b2b760b11b6064820152608401610176565b816105b1576040516370a0823160e01b81523060048201526001600160a01b0386169063a9059cbb90889083906370a082319060240160206040518083038186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190610aa4565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa9190610a7b565b505061094b565b604080516002808252606082018352600092602083019080368337505060025482519293506001600160a01b0316918391506000906105f2576105f2610d03565b6001600160a01b039283166020918202929092010152600180548351921691839190811061062257610622610d03565b6001600160a01b0392831660209182029290920101526000805460405163d06ca61f60e01b81529192169063d06ca61f906106639087908690600401610b24565b60006040518083038186803b15801561067b57600080fd5b505afa15801561068f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106b791908101906109b6565b90506000816000815181106106ce576106ce610d03565b6020026020010151826001815181106106e9576106e9610d03565b6020026020010151670de0b6b3a76400006107049190610cab565b61070e9190610b99565b90506003811015610822576040516370a0823160e01b81523060048201526001600160a01b0389169063a9059cbb908b9083906370a082319060240160206040518083038186803b15801561076257600080fd5b505afa158015610776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079a9190610aa4565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156107e057600080fd5b505af11580156107f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108189190610a7b565b505050505061094b565b60025460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810188905291169063095ea7b390604401602060405180830381600087803b15801561087257600080fd5b505af1158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa9190610a7b565b50600080546001600160a01b0316906338ed1739908790868b6108cf42610258610b81565b6040518663ffffffff1660e01b81526004016108ef959493929190610b45565b600060405180830381600087803b15801561090957600080fd5b505af115801561091d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261094591908101906109b6565b50505050505b5050505050565b600080600080600060a0868803121561096a57600080fd5b853561097581610d2f565b9450602086013561098581610d2f565b9350604086013561099581610d2f565b925060608601356109a581610d2f565b949793965091946080013592915050565b600060208083850312156109c957600080fd5b825167ffffffffffffffff808211156109e157600080fd5b818501915085601f8301126109f557600080fd5b815181811115610a0757610a07610d19565b8060051b604051601f19603f83011681018181108582111715610a2c57610a2c610d19565b604052828152858101935084860182860187018a1015610a4b57600080fd5b600095505b83861015610a6e578051855260019590950194938601938601610a50565b5098975050505050505050565b600060208284031215610a8d57600080fd5b81518015158114610a9d57600080fd5b9392505050565b600060208284031215610ab657600080fd5b5051919050565b600060208284031215610acf57600080fd5b815160ff81168114610a9d57600080fd5b600081518084526020808501945080840160005b83811015610b195781516001600160a01b031687529582019590820190600101610af4565b509495945050505050565b828152604060208201526000610b3d6040830184610ae0565b949350505050565b85815284602082015260a060408201526000610b6460a0830186610ae0565b6001600160a01b0394909416606083015250608001529392505050565b60008219821115610b9457610b94610ced565b500190565b600082610bb657634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610bf6578160001904821115610bdc57610bdc610ced565b80851615610be957918102915b93841c9390800290610bc0565b509250929050565b6000610a9d60ff841683600082610c1757506001610ca5565b81610c2457506000610ca5565b8160018114610c3a5760028114610c4457610c60565b6001915050610ca5565b60ff841115610c5557610c55610ced565b50506001821b610ca5565b5060208310610133831016604e8410600b8410161715610c83575081810a610ca5565b610c8d8383610bbb565b8060001904821115610ca157610ca1610ced565b0290505b92915050565b6000816000190483118215151615610cc557610cc5610ced565b500290565b600060ff821660ff841680821015610ce457610ce4610ced565b90039392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d4457600080fd5b5056fea26469706673582212203daa09f5c5ffcf9f6216833010965bcc8a8fbe6b01bac5dc717e444b71f6469864736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26829,
        "contract": "contracts/token_exchanges/Crv2UsdcTokenExchange.sol:Crv2UsdcTokenExchange",
        "label": "swapRouter",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IUniswapV2Router02)23195"
      },
      {
        "astId": 26832,
        "contract": "contracts/token_exchanges/Crv2UsdcTokenExchange.sol:Crv2UsdcTokenExchange",
        "label": "usdcToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)9027"
      },
      {
        "astId": 26835,
        "contract": "contracts/token_exchanges/Crv2UsdcTokenExchange.sol:Crv2UsdcTokenExchange",
        "label": "crvToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)9027"
      }
    ],
    "types": {
      "t_contract(IERC20)9027": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapV2Router02)23195": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      }
    }
  }
}
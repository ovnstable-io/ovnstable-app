{
  "address": "0x0790733155cf51ab2e5d2741f9fc9c4a8ca29e19",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_idleConnector",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_idleUsdcToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "idleConnector",
      "outputs": [
        {
          "internalType": "contract IConnector",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "idleUsdcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x50dacdb1895fb3bef93f965430fb6c2b7a5532fbc45330738a6da21502b59a25",
  "receipt": {
    "to": null,
    "from": "0x5cb01385d3097b6a189d1ac8ba3364d900666445",
    "contractAddress": "0x0790733155cf51ab2e5d2741f9fc9c4a8ca29e19",
    "transactionIndex": "0x23",
    "gasUsed": "0xce726",
    "logsBloom": "0x
    "blockHash": "0xee6d7dacfe8deac661d2e55ba1a52e9c3fcdeb12632d145f333305570944acea",
    "transactionHash": "0x50dacdb1895fb3bef93f965430fb6c2b7a5532fbc45330738a6da21502b59a25",
    "logs": [
      {
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005cb01385d3097b6a189d1ac8ba3364d900666445",
          "0x0000000000000000000000007b5000af8ab69fd59eb0d4f5762bff57c9c04385"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000060604b74b162ac0000000000000000000000000000000000000000000000059ae79e4a2a21e0b50000000000000000000000000000000000000000000088474f46bebe5e4f254e0000000000000000000000000000000000000000000000059a873dfeb5707e090000000000000000000000000000000000000000000088474fa71f09d30087fa",
        "blockNumber": "0x17064e2",
        "transactionHash": "0x50dacdb1895fb3bef93f965430fb6c2b7a5532fbc45330738a6da21502b59a25",
        "transactionIndex": "0x23",
        "blockHash": "0xee6d7dacfe8deac661d2e55ba1a52e9c3fcdeb12632d145f333305570944acea",
        "logIndex": "0xca",
        "removed": false
      }
    ],
    "blockNumber": "0x17064e2",
    "cumulativeGasUsed": "0x69f0ea",
    "status": "0x1"
  },
  "args": [
    "0xC3cb7Ae751C2F9680709E691CF9152355A5Ed2FA",
    "0x2791bca1f2de4661ed88a30c99a7a9449aa84174",
    "0x1ee6470cd75d5686d0b2b90c0305fa46fb0c89a1"
  ],
  "solcInputHash": "fe95cbbb2d97e4d95ece85093db98e18",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_idleConnector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_idleUsdcToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"idleConnector\",\"outputs\":[{\"internalType\":\"contract IConnector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"idleUsdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token_exchanges/Usdc2IdleUsdcTokenExchange.sol\":\"Usdc2IdleUsdcTokenExchange\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x842c66d5965ed0bf77f274732c2a93a7e2223d53171ec9cccc473bde75104ead\",\"license\":\"MIT\"},\"contracts/interfaces/IConnector.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\n/// @title Common inrterface to DeFi protocol connectors\\n/// @author @Stanta\\n/// @notice Every connector have to implement this function\\n/// @dev Choosing of connector releasing by changing address of connector's contract\\ninterface IConnector {\\n    function stake(\\n        address _asset,\\n        uint256 _amount,\\n        address _beneficiar\\n    ) external;\\n\\n    function unstake(\\n        address _asset,\\n        uint256 _amount,\\n        address _to\\n    ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xf418605c420c689e5cdd7cf9a49d8906f8c5631a629a5d6eea6d9f2eba79fdb8\",\"license\":\"MIT\"},\"contracts/interfaces/ITokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ITokenExchange {\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external;\\n\\n}\\n\",\"keccak256\":\"0x5b882bdf0c53f3ad4e7a281ad884af921b2c7ff16517bf56e50f253fc58b5bbc\",\"license\":\"GPL-3.0\"},\"contracts/token_exchanges/Usdc2IdleUsdcTokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../interfaces/ITokenExchange.sol\\\";\\nimport \\\"../interfaces/IConnector.sol\\\";\\n\\ncontract Usdc2IdleUsdcTokenExchange is ITokenExchange {\\n    IConnector public idleConnector;\\n    IERC20 public usdcToken;\\n    IERC20 public idleUsdcToken;\\n\\n    uint256 usdcDenominator;\\n    uint256 idleUsdcDenominator;\\n\\n    constructor(\\n        address _idleConnector,\\n        address _usdcToken,\\n        address _idleUsdcToken\\n    ) {\\n        require(_idleConnector != address(0), \\\"Zero address not allowed\\\");\\n        require(_usdcToken != address(0), \\\"Zero address not allowed\\\");\\n        require(_idleUsdcToken != address(0), \\\"Zero address not allowed\\\");\\n\\n        idleConnector = IConnector(_idleConnector);\\n        usdcToken = IERC20(_usdcToken);\\n        idleUsdcToken = IERC20(_idleUsdcToken);\\n\\n        usdcDenominator = 10 ** (18 - IERC20Metadata(address(usdcToken)).decimals());\\n        idleUsdcDenominator = 10 ** (18 - IERC20Metadata(address(idleUsdcToken)).decimals());\\n    }\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external override {\\n        require(\\n            (from == usdcToken && to == idleUsdcToken) || (from == idleUsdcToken && to == usdcToken),\\n            \\\"Usdc2IdleUsdcTokenExchange: Some token not compatible\\\"\\n        );\\n\\n        if (amount == 0) {\\n            uint256 fromBalance = from.balanceOf(address(this));\\n            if (fromBalance > 0) {\\n                from.transfer(spender, fromBalance);\\n            }\\n            return;\\n        }\\n\\n        if (from == usdcToken && to == idleUsdcToken) {\\n            //TODO: denominator usage\\n            amount = amount / usdcDenominator;\\n\\n            // if amount eq 0 after normalization transfer back balance and skip staking\\n            uint256 balance = usdcToken.balanceOf(address(this));\\n            if (amount == 0) {\\n                if (balance > 0) {\\n                    usdcToken.transfer(spender, balance);\\n                }\\n                return;\\n            }\\n\\n            require(\\n                balance >= amount,\\n                \\\"Usdc2IdleUsdcTokenExchange: Not enough usdcToken\\\"\\n            );\\n\\n            usdcToken.transfer(address(idleConnector), amount);\\n            idleConnector.stake(address(usdcToken), amount, receiver);\\n\\n            // transfer back unused amount\\n            uint256 unusedBalance = usdcToken.balanceOf(address(this));\\n            if (unusedBalance > 0) {\\n                usdcToken.transfer(spender, unusedBalance);\\n            }\\n        } else {\\n            //TODO: denominator usage\\n            amount = amount / idleUsdcDenominator;\\n\\n            // if amount eq 0 after normalization transfer back balance and skip staking\\n            uint256 balance = idleUsdcToken.balanceOf(address(this));\\n            if (amount == 0) {\\n                if (balance > 0) {\\n                    idleUsdcToken.transfer(spender, balance);\\n                }\\n                return;\\n            }\\n\\n            // aToken on transfer can lost/add 1 wei. On lost we need correct amount\\n            if (balance + 1 == amount) {\\n                amount = amount - 1;\\n            }\\n\\n            require(\\n                balance >= amount,\\n                \\\"Usdc2IdleUsdcTokenExchange: Not enough idleUsdcToken\\\"\\n            );\\n\\n            // move assets to connector\\n            idleUsdcToken.transfer(address(idleConnector), amount);\\n\\n            // correct exchangeAmount if we got diff on aToken transfer\\n            uint256 onIdleConnectorBalance = idleUsdcToken.balanceOf(address(idleConnector));\\n            if (onIdleConnectorBalance < amount) {\\n                amount = onIdleConnectorBalance;\\n            }\\n            uint256 withdrewAmount = idleConnector.unstake(address(usdcToken), amount, receiver);\\n\\n            //TODO: may be add some checks for withdrewAmount\\n\\n            // transfer back unused amount\\n            uint256 unusedBalance = idleUsdcToken.balanceOf(address(this));\\n            if (unusedBalance > 0) {\\n                idleUsdcToken.transfer(spender, unusedBalance);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x66381179c0b11a7dd46aa23421141215a28bef2b855f1b5bb26366de037cd4ff\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806311eac8551461005157806362ac75381461008057806372f2a97914610095578063b37d8c65146100a8575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009361008e366004610a36565b6100bb565b005b600054610064906001600160a01b031681565b600254610064906001600160a01b031681565b6001546001600160a01b0385811691161480156100e557506002546001600160a01b038381169116145b8061011557506002546001600160a01b03858116911614801561011557506001546001600160a01b038381169116145b6101845760405162461bcd60e51b815260206004820152603560248201527f557364633249646c6555736463546f6b656e45786368616e67653a20536f6d6560448201527420746f6b656e206e6f7420636f6d70617469626c6560581b60648201526084015b60405180910390fd5b80610296576040516370a0823160e01b81523060048201526000906001600160a01b038616906370a082319060240160206040518083038186803b1580156101cb57600080fd5b505afa1580156101df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102039190610ac3565b905080156102905760405163a9059cbb60e01b81526001600160a01b0387811660048301526024820183905286169063a9059cbb906044015b602060405180830381600087803b15801561025657600080fd5b505af115801561026a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028e9190610a9a565b505b50610a2f565b6001546001600160a01b0385811691161480156102c057506002546001600160a01b038381169116145b1561060f576003546102d29082610af4565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561031b57600080fd5b505afa15801561032f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103539190610ac3565b9050816103995780156102905760015460405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490529091169063a9059cbb9060440161023c565b818110156104025760405162461bcd60e51b815260206004820152603060248201527f557364633249646c6555736463546f6b656e45786368616e67653a204e6f742060448201526f32b737bab3b4103ab9b231aa37b5b2b760811b606482015260840161017b565b60015460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561045257600080fd5b505af1158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a9190610a9a565b5060005460015460405163294091cd60e01b81526001600160a01b03918216600482015260248101859052868216604482015291169063294091cd90606401600060405180830381600087803b1580156104e357600080fd5b505af11580156104f7573d6000803e3d6000fd5b50506001546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a082319060240160206040518083038186803b15801561054157600080fd5b505afa158015610555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105799190610ac3565b9050801561028e5760015460405163a9059cbb60e01b81526001600160a01b038981166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b1580156105cf57600080fd5b505af11580156105e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106079190610a9a565b505050610a2f565b60045461061c9082610af4565b6002546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561066557600080fd5b505afa158015610679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069d9190610ac3565b9050816106e35780156102905760025460405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490529091169063a9059cbb9060440161023c565b816106ef826001610adc565b141561070357610700600183610b16565b91505b818110156107705760405162461bcd60e51b815260206004820152603460248201527f557364633249646c6555736463546f6b656e45786368616e67653a204e6f742060448201527332b737bab3b41034b23632aab9b231aa37b5b2b760611b606482015260840161017b565b60025460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b1580156107c057600080fd5b505af11580156107d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f89190610a9a565b50600254600080546040516370a0823160e01b81526001600160a01b039182166004820152919216906370a082319060240160206040518083038186803b15801561084257600080fd5b505afa158015610856573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087a9190610ac3565b905082811015610888578092505b6000805460015460405163493718eb60e11b81526001600160a01b03918216600482015260248101879052888216604482015291169063926e31d690606401602060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190610ac3565b6002546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561096257600080fd5b505afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a9190610ac3565b90508015610a2a5760025460405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b1580156109f057600080fd5b505af1158015610a04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a289190610a9a565b505b505050505b5050505050565b600080600080600060a08688031215610a4e57600080fd5b8535610a5981610b43565b94506020860135610a6981610b43565b93506040860135610a7981610b43565b92506060860135610a8981610b43565b949793965091946080013592915050565b600060208284031215610aac57600080fd5b81518015158114610abc57600080fd5b9392505050565b600060208284031215610ad557600080fd5b5051919050565b60008219821115610aef57610aef610b2d565b500190565b600082610b1157634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610b2857610b28610b2d565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610b5857600080fd5b5056fea2646970667358221220662f1bd065bdd9cb493d9619ad9c24c932bcc672b5885001351d8e36c4337c2264736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 28000,
        "contract": "contracts/token_exchanges/Usdc2IdleUsdcTokenExchange.sol:Usdc2IdleUsdcTokenExchange",
        "label": "idleConnector",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IConnector)23780"
      },
      {
        "astId": 28003,
        "contract": "contracts/token_exchanges/Usdc2IdleUsdcTokenExchange.sol:Usdc2IdleUsdcTokenExchange",
        "label": "usdcToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)9027"
      },
      {
        "astId": 28006,
        "contract": "contracts/token_exchanges/Usdc2IdleUsdcTokenExchange.sol:Usdc2IdleUsdcTokenExchange",
        "label": "idleUsdcToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)9027"
      },
      {
        "astId": 28008,
        "contract": "contracts/token_exchanges/Usdc2IdleUsdcTokenExchange.sol:Usdc2IdleUsdcTokenExchange",
        "label": "usdcDenominator",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 28010,
        "contract": "contracts/token_exchanges/Usdc2IdleUsdcTokenExchange.sol:Usdc2IdleUsdcTokenExchange",
        "label": "idleUsdcDenominator",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_contract(IConnector)23780": {
        "encoding": "inplace",
        "label": "contract IConnector",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)9027": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
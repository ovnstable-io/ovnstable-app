{
  "address": "0xb09220Ac53F950B9FC19727E79d91C6c338f8871",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_curveGauge",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "a3CrvGaugeToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "a3CrvToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardGauge",
      "outputs": [
        {
          "internalType": "contract IRewardOnlyGauge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x22f466bc91a2efc85d3a8a279a52abf69e1914182a5a819d624802164c0d64bc",
  "receipt": {
    "to": null,
    "from": "0x5CB01385d3097b6a189d1ac8BA3364D900666445",
    "contractAddress": "0xb09220Ac53F950B9FC19727E79d91C6c338f8871",
    "transactionIndex": 78,
    "gasUsed": "799806",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000400000000000000000020000000000100000008000000000000000000000000000000000000000000000000000000000800010000000400000000100000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000004000000000000000000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0x772d6d943fcbd52f2f0c7eae02feb63144ae0727cc02ec6f7e99642715dec75a",
    "transactionHash": "0x22f466bc91a2efc85d3a8a279a52abf69e1914182a5a819d624802164c0d64bc",
    "logs": [
      {
        "transactionIndex": 78,
        "blockNumber": 24143118,
        "transactionHash": "0x22f466bc91a2efc85d3a8a279a52abf69e1914182a5a819d624802164c0d64bc",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005cb01385d3097b6a189d1ac8ba3364d900666445",
          "0x0000000000000000000000007c7379531b2aee82e4ca06d4175d13b9cbeafd49"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000064a28fafa177fa00000000000000000000000000000000000000000000000597972a8e860614b5000000000000000000000000000000000000000000009c06b01e9810cdf8ce68000000000000000000000000000000000000000000000005973287fed6649cbb000000000000000000000000000000000000000000009c06b0833aa07d9a4662",
        "logIndex": 205,
        "blockHash": "0x772d6d943fcbd52f2f0c7eae02feb63144ae0727cc02ec6f7e99642715dec75a"
      }
    ],
    "blockNumber": 24143118,
    "cumulativeGasUsed": "12106315",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x19793B454D3AfC7b454F206Ffe95aDE26cA6912c"
  ],
  "solcInputHash": "fe95cbbb2d97e4d95ece85093db98e18",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_curveGauge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"a3CrvGaugeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"a3CrvToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardGauge\",\"outputs\":[{\"internalType\":\"contract IRewardOnlyGauge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token_exchanges/A3Crv2A3CrvGaugeTokenExchange.sol\":\"A3Crv2A3CrvGaugeTokenExchange\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x842c66d5965ed0bf77f274732c2a93a7e2223d53171ec9cccc473bde75104ead\",\"license\":\"MIT\"},\"contracts/connectors/curve/interfaces/IRewardOnlyGauge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IRewardOnlyGauge is IERC20 {\\n    function deposit(\\n        uint256 _value,\\n        address _addr,\\n        bool _claim_rewards\\n    ) external;\\n\\n    function deposit(uint256 _value, address _addr) external;\\n\\n    function deposit(uint256 _value, bool _claim_rewards) external;\\n\\n    function deposit(uint256 _value) external;\\n\\n    function withdraw(uint256 _value, bool _claim_rewards) external;\\n\\n    function withdraw(uint256 _value) external;\\n\\n    function lp_token() external returns (address);\\n\\n    function claim_rewards(address _addr, address _receiver) external;\\n\\n    function claim_rewards(address _addr) external;\\n\\n    function claim_rewards() external;\\n\\n    function claimed_reward(address _addr, address _token) external returns (uint256);\\n\\n    function claimable_reward(address _addr, address _token) external returns (uint256);\\n\\n    function claimable_reward_write(address _addr, address _token) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x9522d8e9d2cc23c1ebf9e606874624e8738f7b6a41c36fe6ddc45c0f5141a076\",\"license\":\"MIT\"},\"contracts/interfaces/ITokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ITokenExchange {\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external;\\n\\n}\\n\",\"keccak256\":\"0x5b882bdf0c53f3ad4e7a281ad884af921b2c7ff16517bf56e50f253fc58b5bbc\",\"license\":\"GPL-3.0\"},\"contracts/token_exchanges/A3Crv2A3CrvGaugeTokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../interfaces/ITokenExchange.sol\\\";\\nimport \\\"../connectors/curve/interfaces/IRewardOnlyGauge.sol\\\";\\n\\ncontract A3Crv2A3CrvGaugeTokenExchange is ITokenExchange {\\n    IRewardOnlyGauge public rewardGauge;\\n    IERC20 public a3CrvToken;\\n    IERC20 public a3CrvGaugeToken;\\n\\n    constructor(address _curveGauge) {\\n        require(_curveGauge != address(0), \\\"Zero address not allowed\\\");\\n\\n        rewardGauge = IRewardOnlyGauge(_curveGauge);\\n        a3CrvToken = IERC20(rewardGauge.lp_token());\\n        a3CrvGaugeToken = IERC20(_curveGauge);\\n    }\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external override {\\n        require(\\n            (from == a3CrvToken && to == a3CrvGaugeToken) ||\\n                (from == a3CrvGaugeToken && to == a3CrvToken),\\n            \\\"A3Crv2A3CrvGaugeTokenExchange: Some token not compatible\\\"\\n        );\\n\\n        if (amount == 0) {\\n            from.transfer(spender, from.balanceOf(address(this)));\\n            return;\\n        }\\n\\n        if (from == a3CrvToken && to == a3CrvGaugeToken) {\\n            //TODO: denominator usage\\n            uint256 denominator = 10**(18 - IERC20Metadata(address(a3CrvToken)).decimals());\\n            amount = amount / denominator;\\n\\n            uint256 a3CrvBalance = a3CrvToken.balanceOf(address(this));\\n            require(\\n                a3CrvBalance >= amount,\\n                \\\"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken\\\"\\n            );\\n\\n            // check after denormilization\\n            if (amount == 0) {\\n                a3CrvToken.transfer(spender, a3CrvBalance);\\n                return;\\n            }\\n\\n            // gauge need approve on deposit cause by transferFrom inside deposit\\n            a3CrvToken.approve(address(rewardGauge), amount);\\n            rewardGauge.deposit(amount, receiver, false);\\n        } else {\\n            //TODO: denominator usage\\n            uint256 denominator = 10**(18 - IERC20Metadata(address(a3CrvGaugeToken)).decimals());\\n            amount = amount / denominator;\\n\\n            uint256 a3CrvGaugeBalance = a3CrvGaugeToken.balanceOf(address(this));\\n            require(\\n                a3CrvGaugeBalance >= amount,\\n                \\\"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvGaugeToken\\\"\\n            );\\n\\n            // check after denormilization\\n            if (amount == 0) {\\n                a3CrvGaugeToken.transfer(spender, a3CrvGaugeBalance);\\n                return;\\n            }\\n\\n            // gauge doesn't need approve on withdraw, but we should have amount token\\n            // on tokenExchange\\n            rewardGauge.withdraw(amount, false);\\n\\n            uint256 a3CrvBalance = a3CrvToken.balanceOf(address(this));\\n            require(\\n                a3CrvBalance >= amount,\\n                \\\"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken after withdraw\\\"\\n            );\\n            // reward gauge transfer tokens to msg.sender, so transfer to receiver\\n            a3CrvToken.transfer(receiver, a3CrvBalance);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc5bbec387e2b5d1fd4730e41a62a13da4ea4e9904c24a412a5fb09de304f22f6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610da2380380610da283398101604081905261002f9161014c565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601860248201527f5a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117825560408051634163183360e11b8152905191926382c63066926004808401936020939083900390910190829087803b1580156100e057600080fd5b505af11580156100f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610118919061014c565b600180546001600160a01b039283166001600160a01b0319918216179091556002805493909216921691909117905561017c565b60006020828403121561015e57600080fd5b81516001600160a01b038116811461017557600080fd5b9392505050565b610c178061018b6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632d8647521461005157806334c0d4421461008057806362ac75381461009357806386d551c7146100a8575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600054610064906001600160a01b031681565b6100a66100a13660046109b5565b6100bb565b005b600254610064906001600160a01b031681565b6001546001600160a01b0385811691161480156100e557506002546001600160a01b038381169116145b8061011557506002546001600160a01b03858116911614801561011557506001546001600160a01b038381169116145b61018c5760405162461bcd60e51b815260206004820152603860248201527f41334372763241334372764761756765546f6b656e45786368616e67653a205360448201527f6f6d6520746f6b656e206e6f7420636f6d70617469626c65000000000000000060648201526084015b60405180910390fd5b80610296576040516370a0823160e01b81523060048201526001600160a01b0385169063a9059cbb90879083906370a082319060240160206040518083038186803b1580156101da57600080fd5b505afa1580156101ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102129190610a42565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561025857600080fd5b505af115801561026c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102909190610a19565b506109ae565b6001546001600160a01b0385811691161480156102c057506002546001600160a01b038381169116145b156105e6576001546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610a5b565b61034d906012610b90565b61035890600a610ae3565b90506103648183610a7e565b6001546040516370a0823160e01b81523060048201529193506000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190610a42565b9050828110156104545760405162461bcd60e51b815260206004820152603460248201527f41334372763241334372764761756765546f6b656e45786368616e67653a204e60448201527337ba1032b737bab3b4103099a1b93b2a37b5b2b760611b6064820152608401610183565b826104e85760015460405163a9059cbb60e01b81526001600160a01b038981166004830152602482018490529091169063a9059cbb906044015b602060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e09190610a19565b5050506109ae565b60015460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810186905291169063095ea7b390604401602060405180830381600087803b15801561053857600080fd5b505af115801561054c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105709190610a19565b50600080546040516383df674760e01b8152600481018690526001600160a01b03888116602483015260448201939093529116906383df674790606401600060405180830381600087803b1580156105c757600080fd5b505af11580156105db573d6000803e3d6000fd5b5050505050506109ae565b6002546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561062b57600080fd5b505afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190610a5b565b61066e906012610b90565b61067990600a610ae3565b90506106858183610a7e565b6002546040516370a0823160e01b81523060048201529193506000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156106ce57600080fd5b505afa1580156106e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107069190610a42565b90508281101561077e5760405162461bcd60e51b815260206004820152603960248201527f41334372763241334372764761756765546f6b656e45786368616e67653a204e60448201527f6f7420656e6f7567682061334372764761756765546f6b656e000000000000006064820152608401610183565b826107bc5760025460405163a9059cbb60e01b81526001600160a01b038981166004830152602482018490529091169063a9059cbb9060440161048e565b60008054604051631c683a1b60e11b81526004810186905260248101929092526001600160a01b0316906338d0743690604401600060405180830381600087803b15801561080957600080fd5b505af115801561081d573d6000803e3d6000fd5b50506001546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a082319060240160206040518083038186803b15801561086757600080fd5b505afa15801561087b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089f9190610a42565b9050838110156109235760405162461bcd60e51b815260206004820152604360248201527f41334372763241334372764761756765546f6b656e45786368616e67653a204e60448201527f6f7420656e6f756768206133437276546f6b656e20616674657220776974686460648201526272617760e81b608482015260a401610183565b60015460405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561097157600080fd5b505af1158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190610a19565b505050505b5050505050565b600080600080600060a086880312156109cd57600080fd5b85356109d881610bc9565b945060208601356109e881610bc9565b935060408601356109f881610bc9565b92506060860135610a0881610bc9565b949793965091946080013592915050565b600060208284031215610a2b57600080fd5b81518015158114610a3b57600080fd5b9392505050565b600060208284031215610a5457600080fd5b5051919050565b600060208284031215610a6d57600080fd5b815160ff81168114610a3b57600080fd5b600082610a9b57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610adb578160001904821115610ac157610ac1610bb3565b80851615610ace57918102915b93841c9390800290610aa5565b509250929050565b6000610a3b60ff841683600082610afc57506001610b8a565b81610b0957506000610b8a565b8160018114610b1f5760028114610b2957610b45565b6001915050610b8a565b60ff841115610b3a57610b3a610bb3565b50506001821b610b8a565b5060208310610133831016604e8410600b8410161715610b68575081810a610b8a565b610b728383610aa0565b8060001904821115610b8657610b86610bb3565b0290505b92915050565b600060ff821660ff841680821015610baa57610baa610bb3565b90039392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610bde57600080fd5b5056fea2646970667358221220f0b163af810f639225696529732e91164a9a18365f85074a2b86410bc0d8e24064736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632d8647521461005157806334c0d4421461008057806362ac75381461009357806386d551c7146100a8575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600054610064906001600160a01b031681565b6100a66100a13660046109b5565b6100bb565b005b600254610064906001600160a01b031681565b6001546001600160a01b0385811691161480156100e557506002546001600160a01b038381169116145b8061011557506002546001600160a01b03858116911614801561011557506001546001600160a01b038381169116145b61018c5760405162461bcd60e51b815260206004820152603860248201527f41334372763241334372764761756765546f6b656e45786368616e67653a205360448201527f6f6d6520746f6b656e206e6f7420636f6d70617469626c65000000000000000060648201526084015b60405180910390fd5b80610296576040516370a0823160e01b81523060048201526001600160a01b0385169063a9059cbb90879083906370a082319060240160206040518083038186803b1580156101da57600080fd5b505afa1580156101ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102129190610a42565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561025857600080fd5b505af115801561026c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102909190610a19565b506109ae565b6001546001600160a01b0385811691161480156102c057506002546001600160a01b038381169116145b156105e6576001546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610a5b565b61034d906012610b90565b61035890600a610ae3565b90506103648183610a7e565b6001546040516370a0823160e01b81523060048201529193506000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190610a42565b9050828110156104545760405162461bcd60e51b815260206004820152603460248201527f41334372763241334372764761756765546f6b656e45786368616e67653a204e60448201527337ba1032b737bab3b4103099a1b93b2a37b5b2b760611b6064820152608401610183565b826104e85760015460405163a9059cbb60e01b81526001600160a01b038981166004830152602482018490529091169063a9059cbb906044015b602060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e09190610a19565b5050506109ae565b60015460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810186905291169063095ea7b390604401602060405180830381600087803b15801561053857600080fd5b505af115801561054c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105709190610a19565b50600080546040516383df674760e01b8152600481018690526001600160a01b03888116602483015260448201939093529116906383df674790606401600060405180830381600087803b1580156105c757600080fd5b505af11580156105db573d6000803e3d6000fd5b5050505050506109ae565b6002546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561062b57600080fd5b505afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190610a5b565b61066e906012610b90565b61067990600a610ae3565b90506106858183610a7e565b6002546040516370a0823160e01b81523060048201529193506000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156106ce57600080fd5b505afa1580156106e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107069190610a42565b90508281101561077e5760405162461bcd60e51b815260206004820152603960248201527f41334372763241334372764761756765546f6b656e45786368616e67653a204e60448201527f6f7420656e6f7567682061334372764761756765546f6b656e000000000000006064820152608401610183565b826107bc5760025460405163a9059cbb60e01b81526001600160a01b038981166004830152602482018490529091169063a9059cbb9060440161048e565b60008054604051631c683a1b60e11b81526004810186905260248101929092526001600160a01b0316906338d0743690604401600060405180830381600087803b15801561080957600080fd5b505af115801561081d573d6000803e3d6000fd5b50506001546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a082319060240160206040518083038186803b15801561086757600080fd5b505afa15801561087b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089f9190610a42565b9050838110156109235760405162461bcd60e51b815260206004820152604360248201527f41334372763241334372764761756765546f6b656e45786368616e67653a204e60448201527f6f7420656e6f756768206133437276546f6b656e20616674657220776974686460648201526272617760e81b608482015260a401610183565b60015460405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561097157600080fd5b505af1158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190610a19565b505050505b5050505050565b600080600080600060a086880312156109cd57600080fd5b85356109d881610bc9565b945060208601356109e881610bc9565b935060408601356109f881610bc9565b92506060860135610a0881610bc9565b949793965091946080013592915050565b600060208284031215610a2b57600080fd5b81518015158114610a3b57600080fd5b9392505050565b600060208284031215610a5457600080fd5b5051919050565b600060208284031215610a6d57600080fd5b815160ff81168114610a3b57600080fd5b600082610a9b57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610adb578160001904821115610ac157610ac1610bb3565b80851615610ace57918102915b93841c9390800290610aa5565b509250929050565b6000610a3b60ff841683600082610afc57506001610b8a565b81610b0957506000610b8a565b8160018114610b1f5760028114610b2957610b45565b6001915050610b8a565b60ff841115610b3a57610b3a610bb3565b50506001821b610b8a565b5060208310610133831016604e8410600b8410161715610b68575081810a610b8a565b610b728383610aa0565b8060001904821115610b8657610b86610bb3565b0290505b92915050565b600060ff821660ff841680821015610baa57610baa610bb3565b90039392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610bde57600080fd5b5056fea2646970667358221220f0b163af810f639225696529732e91164a9a18365f85074a2b86410bc0d8e24064736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26144,
        "contract": "contracts/token_exchanges/A3Crv2A3CrvGaugeTokenExchange.sol:A3Crv2A3CrvGaugeTokenExchange",
        "label": "rewardGauge",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IRewardOnlyGauge)21933"
      },
      {
        "astId": 26147,
        "contract": "contracts/token_exchanges/A3Crv2A3CrvGaugeTokenExchange.sol:A3Crv2A3CrvGaugeTokenExchange",
        "label": "a3CrvToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)9027"
      },
      {
        "astId": 26150,
        "contract": "contracts/token_exchanges/A3Crv2A3CrvGaugeTokenExchange.sol:A3Crv2A3CrvGaugeTokenExchange",
        "label": "a3CrvGaugeToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)9027"
      }
    ],
    "types": {
      "t_contract(IERC20)9027": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IRewardOnlyGauge)21933": {
        "encoding": "inplace",
        "label": "contract IRewardOnlyGauge",
        "numberOfBytes": "20"
      }
    }
  }
}